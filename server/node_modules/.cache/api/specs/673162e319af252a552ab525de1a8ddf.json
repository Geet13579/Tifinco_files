{
  "openapi": "3.0.0",
  "info": {
    "version": "2022-01-01",
    "title": "New Payment Gateway APIs",
    "contact": {
      "email": "nextgenapi@cashfree.com"
    }
  },
  "servers": [
    {
      "url": "https://sandbox.cashfree.com/pg",
      "description": "Sandbox server"
    },
    {
      "url": "https://api.cashfree.com/pg",
      "description": "Production server"
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "summary": "Create Order",
        "description": "Use this API to create orders with Cashfree from your backend and get the payment link",
        "tags": [
          "Orders"
        ],
        "operationId": "CreateOrder",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateOrderBackendRequest",
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "Order identifier present in your system. Alphanumeric and only - and _ allowed.",
                    "minLength": 3,
                    "maxLength": 45
                  },
                  "order_amount": {
                    "type": "number",
                    "description": "Bill amount for the order. Provide upto two decimals. 10.15 means Rs 10 and 15 paisa",
                    "format": "double",
                    "example": 10.15
                  },
                  "order_currency": {
                    "type": "string",
                    "description": "Currency for the order. INR if left empty. Contact care@cashfree.com to enable new currencies. ",
                    "example": "INR"
                  },
                  "customer_details": {
                    "title": "CustomerDetails",
                    "example": {
                      "customer_id": "7112AAA812234",
                      "customer_email": "john@cashfree.com",
                      "customer_phone": "9908734801",
                      "customer_bank_account_number": "1518121112",
                      "customer_bank_ifsc": "CITI0000001",
                      "customer_bank_code": 3333
                    },
                    "type": "object",
                    "properties": {
                      "customer_id": {
                        "type": "string",
                        "description": "A unique identifier for the customer. Use alphanumeric values only.",
                        "minLength": 3,
                        "maxLength": 50
                      },
                      "customer_email": {
                        "type": "string",
                        "description": "Customer email address.",
                        "minLength": 3,
                        "maxLength": 100
                      },
                      "customer_phone": {
                        "type": "string",
                        "description": "Customer phone number.",
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "customer_bank_account_number": {
                        "type": "string",
                        "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
                        "minLength": 3,
                        "maxLength": 20
                      },
                      "customer_bank_ifsc": {
                        "type": "string",
                        "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
                      },
                      "customer_bank_code": {
                        "type": "string",
                        "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
                      }
                    },
                    "required": [
                      "customer_id",
                      "customer_email",
                      "customer_phone"
                    ]
                  },
                  "order_meta": {
                    "title": "OrderMeta",
                    "example": {
                      "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
                      "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
                    },
                    "type": "object",
                    "properties": {
                      "return_url": {
                        "type": "string",
                        "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
                      },
                      "notify_url": {
                        "type": "string",
                        "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
                      },
                      "payment_methods": {
                        "type": "string",
                        "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                      }
                    }
                  },
                  "order_expiry_time": {
                    "type": "string",
                    "description": "Time after which the order expires. Customers will not be able to make the payment beyond the time specified here. We store timestamps in IST, but you can provide them in a valid ISO 8601 time format.",
                    "example": "2021-07-29T00:00:00Z"
                  },
                  "order_note": {
                    "type": "string",
                    "description": "Order note for reference.",
                    "example": "Test order",
                    "minLength": 3,
                    "maxLength": 200
                  },
                  "order_tags": {
                    "type": "object",
                    "description": "Custom Tags which can be passed for an order. A maximum of 6 tags can be added",
                    "additionalProperties": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 255
                    }
                  },
                  "order_splits": {
                    "type": "array",
                    "items": {
                      "title": "VendorSplit",
                      "type": "object",
                      "example": {
                        "vendor_id": "Vendor01",
                        "amount": "100.1"
                      },
                      "properties": {
                        "vendor_id": {
                          "type": "string",
                          "description": "Vendor id created in Cashfree system"
                        },
                        "amount": {
                          "type": "number",
                          "description": "Amount which will be associated with this vendor"
                        },
                        "percentage": {
                          "type": "number",
                          "description": "Percentage of order amount which shall get added to vendor account"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "order_amount",
                  "order_currency",
                  "customer_details"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OrdersEntity",
                  "type": "object",
                  "example": {
                    "cf_order_id": 1553338,
                    "order_id": "order_271vovQ3PTZAx3fDI0",
                    "entity": "order",
                    "order_currency": "INR",
                    "order_amount": 10.12,
                    "order_status": "ACTIVE",
                    "order_token": "79byj5123g6912mki3",
                    "order_note": "order #145",
                    "order_expiry_time": "2021-07-29T05:30:00+05:30",
                    "payment_link": "https://payments-test.cashfree.com/order#123bhd816dfb1"
                  },
                  "properties": {
                    "cf_order_id": {
                      "type": "integer"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "order_currency": {
                      "type": "string"
                    },
                    "order_amount": {
                      "type": "number"
                    },
                    "order_status": {
                      "type": "string"
                    },
                    "order_token": {
                      "type": "string"
                    },
                    "order_expiry_time": {
                      "type": "string"
                    },
                    "order_note": {
                      "type": "string"
                    },
                    "payment_link": {
                      "type": "string"
                    },
                    "customer_details": {
                      "title": "CustomerDetails",
                      "example": {
                        "customer_id": "7112AAA812234",
                        "customer_email": "john@cashfree.com",
                        "customer_phone": "9908734801",
                        "customer_bank_account_number": "1518121112",
                        "customer_bank_ifsc": "CITI0000001",
                        "customer_bank_code": 3333
                      },
                      "type": "object",
                      "properties": {
                        "customer_id": {
                          "type": "string",
                          "description": "A unique identifier for the customer. Use alphanumeric values only.",
                          "minLength": 3,
                          "maxLength": 50
                        },
                        "customer_email": {
                          "type": "string",
                          "description": "Customer email address.",
                          "minLength": 3,
                          "maxLength": 100
                        },
                        "customer_phone": {
                          "type": "string",
                          "description": "Customer phone number.",
                          "minLength": 10,
                          "maxLength": 10
                        },
                        "customer_bank_account_number": {
                          "type": "string",
                          "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
                          "minLength": 3,
                          "maxLength": 20
                        },
                        "customer_bank_ifsc": {
                          "type": "string",
                          "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
                        },
                        "customer_bank_code": {
                          "type": "string",
                          "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
                        }
                      },
                      "required": [
                        "customer_id",
                        "customer_email",
                        "customer_phone"
                      ]
                    },
                    "order_meta": {
                      "title": "OrderMeta",
                      "example": {
                        "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
                        "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
                      },
                      "type": "object",
                      "properties": {
                        "return_url": {
                          "type": "string",
                          "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
                        },
                        "notify_url": {
                          "type": "string",
                          "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
                        },
                        "payment_methods": {
                          "type": "string",
                          "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                        }
                      }
                    },
                    "payments": {
                      "title": "PaymentURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
                        }
                      }
                    },
                    "settlements": {
                      "title": "SettlementURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
                        }
                      }
                    },
                    "refunds": {
                      "title": "RefundURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/pay": {
      "post": {
        "summary": "Order Pay",
        "description": "Use this API when you have already created the orders and want Cashfree to process the payment.",
        "operationId": "OrderPay",
        "deprecated": false,
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-api-version",
            "required": true,
            "schema": {
              "type": "string",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OrderPayRequest",
                "type": "object",
                "properties": {
                  "order_token": {
                    "type": "string",
                    "example": "hyj120nbvt12831"
                  },
                  "payment_method": {
                    "oneOf": [
                      {
                        "title": "CardPaymentMethod",
                        "description": "The card payment object is used to make payment using either plain card number, saved card instrument id or using cryptogram ",
                        "example": {
                          "card": {
                            "channel": "link",
                            "card_number": "4111111111111111",
                            "card_holder_name": "Tushar Gupta",
                            "card_expiry_mm": "06",
                            "card_expiry_yy": "22",
                            "card_cvv": "900"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "card": {
                            "title": "Card",
                            "example": {
                              "channel": "link",
                              "card_number": "4111111111111111",
                              "card_holder_name": "Tushar Gupta",
                              "card_expiry_mm": "06",
                              "card_expiry_yy": "22",
                              "card_cvv": "900"
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "enum": [
                                  "link",
                                  "post"
                                ],
                                "description": "The channel for card payments can be \"link\" or \"post\". Post is used for seamless OTP payments where merchant captures OTP on their own page."
                              },
                              "card_number": {
                                "type": "string",
                                "description": "Customer card number for plain card transactions. Token pan number for tokenized card transactions."
                              },
                              "card_holder_name": {
                                "type": "string",
                                "description": "Customer name mentioned on the card."
                              },
                              "card_expiry_mm": {
                                "type": "string",
                                "description": "Card expiry month for plain card transactions. Token expiry month for tokenized card transactions."
                              },
                              "card_expiry_yy": {
                                "type": "string",
                                "description": "Card expiry year for plain card transactions. Token expiry year for tokenized card transactions."
                              },
                              "card_cvv": {
                                "type": "string",
                                "description": "CVV mentioned on the card."
                              },
                              "instrument_id": {
                                "type": "string",
                                "description": "instrument id of saved card. Required only to make payment using saved instrument."
                              },
                              "cryptogram": {
                                "type": "string",
                                "description": "cryptogram received from card network. Required only for tokenized card transactions."
                              },
                              "token_requestor_id": {
                                "type": "string",
                                "description": "TRID issued by card networks. Required only for tokenized card transactions."
                              },
                              "card_display": {
                                "type": "string",
                                "description": "last 4 digits of original card number. Required only for tokenized card transactions."
                              },
                              "card_alias": {
                                "type": "string",
                                "description": "Card alias as returned by Cashfree Vault API."
                              },
                              "card_bank_name": {
                                "type": "string",
                                "enum": [
                                  "Kotak",
                                  "ICICI",
                                  "RBL",
                                  "BOB",
                                  "Standard Chartered"
                                ],
                                "description": "One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\"]. Card bank name, required for EMI payments. This is the bank user has selected for EMI"
                              },
                              "emi_tenure": {
                                "type": "integer",
                                "description": "EMI tenure selected by the user",
                                "required": [
                                  "channel",
                                  "card_number",
                                  "card_expiry_mm",
                                  "card_expiry_yy",
                                  "card_cvv"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "card"
                        ]
                      },
                      {
                        "title": "UPIPaymentMethod",
                        "example": {
                          "upi": {
                            "channel": "collect",
                            "upi_id": "rajnandan1@okhdfcbak"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "upi": {
                            "title": "Upi",
                            "example": {
                              "channel": "collect",
                              "upi_id": "rajnandan1@okhdfcbak",
                              "upi_expiry_minutes": 10
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "enum": [
                                  "link",
                                  "collect",
                                  "qrcode"
                                ],
                                "description": "Specify the channel through which the payment must be processed. Can be one of [\"link\", \"collect\", \"qrcode\"]"
                              },
                              "upi_id": {
                                "type": "string",
                                "description": "Customer UPI VPA to process payment."
                              },
                              "upi_expiry_minutes": {
                                "type": "number",
                                "description": "The UPI request will be valid for this expiry minutes. This parameter is only applicable for a UPI collect payment. The default value is 5 minutes. You should keep the minimum as 5 minutes, and maximum as 15 minutes"
                              },
                              "authorize_only": {
                                "type": "boolean",
                                "description": "For one time mandate on UPI. Set this as authorize_only = true. Please note that you can only use the \"collect\" channel if you are sending a one time mandate request"
                              },
                              "authorization": {
                                "type": "object",
                                "title": "UPIAuthorizeDetails",
                                "example": {
                                  "authorization": {
                                    "approve_by": "2022-07-02T10:20:12+05:30",
                                    "start_time": "2022-09-21T12:34:34Z",
                                    "end_time": "2022-10-22T12:34:34Z"
                                  }
                                },
                                "properties": {
                                  "approve_by": {
                                    "type": "string",
                                    "description": "Time by which this authorization should be approved by the customer."
                                  },
                                  "start_time": {
                                    "type": "string",
                                    "description": "This is the time when the UPI one time mandate will start"
                                  },
                                  "end_time": {
                                    "type": "string",
                                    "description": "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time."
                                  }
                                }
                              }
                            },
                            "required": [
                              "channel"
                            ]
                          }
                        },
                        "required": [
                          "upi"
                        ]
                      },
                      {
                        "title": "NetBankingPaymentMethod",
                        "example": {
                          "netbanking": {
                            "channel": "link",
                            "netbanking_bank_code": 3022
                          }
                        },
                        "type": "object",
                        "properties": {
                          "netbanking": {
                            "title": "Netbanking",
                            "example": {
                              "channel": "link",
                              "netbanking_bank_code": 3022
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "The channel for netbanking will always be `link`"
                              },
                              "netbanking_bank_code": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Bank code"
                              }
                            },
                            "required": [
                              "channel",
                              "netbanking_bank_code"
                            ]
                          }
                        },
                        "required": [
                          "netbanking"
                        ]
                      },
                      {
                        "title": "AppPaymentMethod",
                        "example": {
                          "app": {
                            "channel": "link",
                            "provider": "gpay",
                            "phone": "8474090552"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "app": {
                            "title": "App",
                            "example": {
                              "channel": "link",
                              "provider": "gpay",
                              "phone": "8474090552"
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Specify the channel through which the payment must be processed."
                              },
                              "phone": {
                                "type": "string",
                                "description": "Customer phone number associated with a wallet for payment."
                              }
                            },
                            "required": [
                              "channel",
                              "phone"
                            ]
                          }
                        },
                        "required": [
                          "app"
                        ]
                      },
                      {
                        "title": "CardEMIPaymentMethod",
                        "example": {
                          "emi": {
                            "channel": "link",
                            "card_number": "4111111111111111",
                            "card_holder_name": "Tushar Gupta",
                            "card_expiry_mm": "06",
                            "card_expiry_yy": "22",
                            "card_cvv": "900",
                            "card_bank_name": "Kotak",
                            "emi_tenure": 3
                          }
                        },
                        "type": "object",
                        "properties": {
                          "emi": {
                            "title": "CardEMI",
                            "example": {
                              "channel": "link",
                              "card_number": "4111111111111111",
                              "card_holder_name": "Tushar Gupta",
                              "card_expiry_mm": "06",
                              "card_expiry_yy": "22",
                              "card_cvv": "900"
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "The channel for card payments will always be \"link\""
                              },
                              "card_number": {
                                "type": "string",
                                "description": "Customer card number."
                              },
                              "card_holder_name": {
                                "type": "string",
                                "description": "Customer name mentioned on the card."
                              },
                              "card_expiry_mm": {
                                "type": "string",
                                "description": "Card expiry month."
                              },
                              "card_expiry_yy": {
                                "type": "string",
                                "description": "Card expiry year."
                              },
                              "card_cvv": {
                                "type": "string",
                                "description": "CVV mentioned on the card."
                              },
                              "card_alias": {
                                "type": "string",
                                "description": "Card alias as returned by Cashfree Vault API"
                              },
                              "card_bank_name": {
                                "type": "string",
                                "enum": [
                                  "Kotak",
                                  "ICICI",
                                  "RBL",
                                  "BOB",
                                  "Standard Chartered",
                                  "HDFC"
                                ],
                                "description": "Card bank name, required for EMI payments. This is the bank user has selected for EMI. One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\", \"HDFC\"]"
                              },
                              "emi_tenure": {
                                "type": "integer",
                                "description": "EMI tenure selected by the user",
                                "required": [
                                  "channel",
                                  "card_number",
                                  "card_expiry_mm",
                                  "card_expiry_yy",
                                  "card_cvv",
                                  "card_bank_name",
                                  "emi_tenure"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "card"
                        ]
                      },
                      {
                        "title": "CardlessEMIPaymentMethod",
                        "example": {
                          "channel": "link",
                          "provider": "flexmoney",
                          "phone": 781234121
                        },
                        "type": "object",
                        "properties": {
                          "cardless_emi": {
                            "title": "CardlessEMI",
                            "example": {
                              "channel": "link",
                              "provider": "zestmoney",
                              "phone": 7768913241
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "The channel for cardless EMI is always `link`"
                              },
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "flexmoney",
                                  "zestmoney"
                                ],
                                "description": "One of [\"flexmoney\", \"zestmoney\"]"
                              },
                              "phone": {
                                "type": "string",
                                "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
                              }
                            }
                          }
                        },
                        "required": [
                          "cardless_emi"
                        ]
                      },
                      {
                        "title": "PaylaterPaymentMethod",
                        "example": {
                          "channel": "link",
                          "provider": "lazypay",
                          "phone": 781234121
                        },
                        "type": "object",
                        "properties": {
                          "paylater": {
                            "title": "Paylater",
                            "example": {
                              "channel": "link",
                              "provider": "kotak",
                              "phone": 7789112345
                            },
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "The channel for cardless EMI is always `link`"
                              },
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "kotak",
                                  "flexipay",
                                  "zestmoney",
                                  "lazypay",
                                  "olapostpaid"
                                ],
                                "description": "One of [\"kotak\", \"flexipay\", \"zestmoney\", \"lazypay\", \"olapostpaid\"]. Please note that Flexipay is offered by HDFC bank"
                              },
                              "phone": {
                                "type": "string",
                                "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
                              }
                            }
                          }
                        },
                        "required": [
                          "paylater"
                        ]
                      }
                    ]
                  },
                  "save_instrument": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "order_token",
                  "payment_method"
                ]
              },
              "examples": {
                "plain_card": {
                  "summary": "Pay using plain card",
                  "value": {
                    "order_token": "hyj120nbvt12831",
                    "payment_method": {
                      "card": {
                        "channel": "link",
                        "card_number": "4111111111111111",
                        "card_holder_name": "Tushar Gupta",
                        "card_expiry_mm": "06",
                        "card_expiry_yy": "22",
                        "card_cvv": "900"
                      }
                    }
                  }
                },
                "save_card_during_payment": {
                  "summary": "Pay using plain card and save it",
                  "value": {
                    "order_token": "hyj120nbvt12831",
                    "payment_method": {
                      "card": {
                        "channel": "link",
                        "card_number": "4111111111111111",
                        "card_holder_name": "Tushar Gupta",
                        "card_expiry_mm": "06",
                        "card_expiry_yy": "22",
                        "card_cvv": "900"
                      }
                    },
                    "save_instrument": true
                  }
                },
                "saved_card": {
                  "summary": "Pay using instrument id of saved card",
                  "value": {
                    "order_token": "hyj120nbvt12831",
                    "payment_method": {
                      "card": {
                        "channel": "link",
                        "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
                        "card_cvv": "900"
                      }
                    }
                  }
                },
                "token_card": {
                  "summary": "Pay using card network token and cryptogram",
                  "value": {
                    "order_token": "hyj120nbvt12831",
                    "payment_method": {
                      "card": {
                        "channel": "link",
                        "card_number": "4111111111111111",
                        "card_expiry_mm": "03",
                        "card_expiry_yy": "26",
                        "cryptogram": "AQBBBBBBZatIlaIAmWKSghwBBBB=",
                        "card_cvv": "900",
                        "token_requestor_id": "22457512314",
                        "card_display": "3243"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OrderPayResponse",
                  "type": "object",
                  "example": {
                    "payment_method": "card",
                    "channel": "link",
                    "action": "link",
                    "cf_payment_id": 91235,
                    "data": {
                      "url": "https://sandbox.cashfree.com/pg/view/gateway/FHsuvhayLM5mmhINoqri7ba296e2ebca8b98e6119f6223021a13",
                      "payload": null,
                      "content_type": null,
                      "method": null
                    }
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "integer",
                      "description": "Payment identifier created by Cashfree"
                    },
                    "payment_method": {
                      "type": "string",
                      "enum": [
                        "netbanking",
                        "card",
                        "upi",
                        "app",
                        "cardless_emi",
                        "paylater"
                      ],
                      "description": "One of [\"upi\", \"netbanking\", \"card\", \"app\", \"cardless_emi\", \"paylater\"] "
                    },
                    "channel": {
                      "type": "string",
                      "enum": [
                        "link",
                        "collect",
                        "qrcode"
                      ],
                      "description": "One of [\"link\", \"collect\", \"qrcode\"]. In an older version we used to support different channels like 'gpay', 'phonepe' etc. However, we now support only the following channels - link, collect and qrcode. To process payments using gpay, you will have to provide channel as 'link' and provider as 'gpay'"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "link",
                        "custom",
                        "form"
                      ],
                      "description": "One of [\"link\", \"custom\", \"form\"]",
                      "nullable": true
                    },
                    "data": {
                      "title": "OrderPayData",
                      "type": "object",
                      "example": {
                        "url": "https://hdfcbank.com/sendTo/897?q",
                        "payload": {
                          "MD": 89811231231,
                          "PaReq": "89123l1j2l3j1ljkkl="
                        },
                        "content_type": "application/x-www-form-encoded",
                        "method": "post"
                      },
                      "properties": {
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "payload": {
                          "nullable": true,
                          "type": "object"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/authorization": {
      "post": {
        "summary": "Preauthorization",
        "description": "Use this API to capture or void a preauthorized payment",
        "operationId": "Preauthorization",
        "deprecated": false,
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The order or invoice ID for which you want to view the payment details."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "AuthorizationRequest",
                "example": {
                  "action": "CAPTURE",
                  "amount": 100
                },
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "CAPTURE",
                      "VOID"
                    ],
                    "description": "Type of authorization to run. Can be one of 'CAPTURE' , 'VOID'"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount if you are running a 'CAPTURE'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentsEntity",
                  "type": "object",
                  "example": {
                    "cf_payment_id": 12376123,
                    "order_id": "order_8123",
                    "entity": "payment",
                    "payment_currency": "INR",
                    "order_amount": 10.01,
                    "is_captured": true,
                    "payment_group": "upi",
                    "authorization": null,
                    "payment_method": {
                      "upi": {
                        "channel": "collect",
                        "upi_id": "rohit@icici"
                      }
                    },
                    "payment_amount": 10.01,
                    "payment_time": "2021-07-23T12:15:06+05:30",
                    "payment_completion_time": "2021-07-23T12:18:59+05:30",
                    "payment_status": "SUCCESS",
                    "payment_message": "Transaction successful",
                    "bank_reference": "P78112898712",
                    "auth_id": "A898101"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "integer"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "is_captured": {
                      "type": "boolean"
                    },
                    "order_amount": {
                      "type": "number",
                      "description": "Order amount can be different from payment amount if you collect service fee from the customer"
                    },
                    "payment_group": {
                      "type": "string",
                      "description": "Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']"
                    },
                    "payment_currency": {
                      "type": "string"
                    },
                    "payment_amount": {
                      "type": "number"
                    },
                    "payment_time": {
                      "type": "string",
                      "description": "This is the time when the payment was initiated"
                    },
                    "payment_completion_time": {
                      "type": "string",
                      "description": "This is the time when the payment reaches its terminal state"
                    },
                    "payment_status": {
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "NOT_ATTEMPTED",
                        "FAILED",
                        "USER_DROPPED",
                        "VOID",
                        "CANCELLED",
                        "PENDING"
                      ],
                      "description": "The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]"
                    },
                    "payment_message": {
                      "type": "string"
                    },
                    "bank_reference": {
                      "type": "string"
                    },
                    "auth_id": {
                      "type": "string"
                    },
                    "authorization": {
                      "title": "AuthorizationInPayments",
                      "description": "The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.",
                      "example": {
                        "action": "CAPTURE",
                        "status": "PENDING",
                        "captured_amount": 100,
                        "start_time": "2022-02-09T18:04:34+05:30",
                        "end_time": "2022-02-19T18:04:34+05:30",
                        "approve_by": "2022-02-09T18:04:34+05:30"
                      },
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "enum": [
                            "CAPTURE",
                            "VOID"
                          ],
                          "description": "One of CAPTURE or VOID"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "SUCCESS",
                            "PENDING"
                          ],
                          "description": "One of SUCCESS or PENDING"
                        },
                        "captured_amount": {
                          "type": "number",
                          "description": "The captured amount for this authorization request"
                        },
                        "start_time": {
                          "type": "string",
                          "description": "Start time of this authorization hold (only for UPI)"
                        },
                        "end_time": {
                          "type": "string",
                          "description": "End time of this authorization hold (only for UPI)"
                        },
                        "approve_by": {
                          "type": "string",
                          "description": "Approve by time as passed in the authorization request (only for UPI)"
                        }
                      }
                    },
                    "payment_method": {
                      "title": "PaymentMethodInPaymentsEntity",
                      "properties": {
                        "payment_method": {
                          "oneOf": [
                            {
                              "title": "PaymentMethodCardInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "card_number": "41111xxxxxx111",
                                "card_network": "visa",
                                "card_type": "credit_card",
                                "card_country": "IN",
                                "card_bank_name": "HDFC Bank"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "card_network": {
                                  "type": "string"
                                },
                                "card_type": {
                                  "type": "string"
                                },
                                "card_country": {
                                  "type": "string"
                                },
                                "card_bank_name": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodNetBankingInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "netbanking_bank_code": 3044,
                                "netbanking_bank_name": "State Bank of India"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "netbanking_bank_code": {
                                  "type": "string"
                                },
                                "netbanking_bank_name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "channel",
                                "netbanking_bank_name",
                                "netbanking_bank_code"
                              ]
                            },
                            {
                              "title": "PaymentMethodUPIInPaymentsEntity",
                              "example": {
                                "channel": "collect",
                                "upi_id": "980123781@upi"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "upi_id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "channel"
                              ]
                            },
                            {
                              "title": "PaymentMethodAppInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "paytm",
                                "phone": 1234512345
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodCardlessEMIInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "flexmoney",
                                "phone": 9908761211
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodPaylaterInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "lazypay",
                                "phone": 9908761211
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/pay/authenticate/{payment_id}": {
      "post": {
        "summary": "Submit or Resend OTP",
        "description": "If you accept OTP on your own page, you can use the below API to send OTP to Cashfree.",
        "tags": [
          "Authentication"
        ],
        "operationId": "OTPRequest",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The order or invoice ID for which you want to view the payment details."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OTPRequest",
                "type": "object",
                "required": [
                  "otp",
                  "operation"
                ],
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "OTP to be submitted"
                  },
                  "operation": {
                    "type": "string",
                    "enum": [
                      "SUBMIT_OTP",
                      "RESEND_OTP"
                    ],
                    "description": "The operation for this workflow. Could be either SUBMIT_OTP or RESEND_OTP"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OTP Response Entity",
                  "description": "This is the response shared when merchant inovkes the OTP submit or resend API",
                  "example": {
                    "cf_payment_id": 975654863,
                    "authenticate_status": "FAILED",
                    "operation": "SUBMIT_OTP",
                    "payment_message": "otp is invalid"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "number",
                      "description": "The payment id for which this request was sent"
                    },
                    "operation": {
                      "type": "string",
                      "enum": [
                        "SUBMIT_OTP",
                        "RESEND_OTP"
                      ],
                      "description": "The operation that was invoked for this request."
                    },
                    "authenticate_status": {
                      "type": "string",
                      "enum": [
                        "FAILED",
                        "SUCCESS"
                      ],
                      "description": "Status of the is operation. Will be either failed or successful. If the operation is successful, you should still call the authorization status to verify the final payment status."
                    },
                    "payment_message": {
                      "type": "string",
                      "description": "Human readable message which describes the status in more detail"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}": {
      "get": {
        "summary": "Get Order",
        "description": "Use this API to view all details of an order.",
        "tags": [
          "Orders"
        ],
        "operationId": "GetOrder",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The order or invoice ID for which you want to view the order details."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OrdersEntity",
                  "type": "object",
                  "example": {
                    "cf_order_id": 1553338,
                    "order_id": "order_271vovQ3PTZAx3fDI0",
                    "entity": "order",
                    "order_currency": "INR",
                    "order_amount": 10.12,
                    "order_status": "ACTIVE",
                    "order_token": "79byj5123g6912mki3",
                    "order_note": "order #145",
                    "order_expiry_time": "2021-07-29T05:30:00+05:30",
                    "payment_link": "https://payments-test.cashfree.com/order#123bhd816dfb1"
                  },
                  "properties": {
                    "cf_order_id": {
                      "type": "integer"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "order_currency": {
                      "type": "string"
                    },
                    "order_amount": {
                      "type": "number"
                    },
                    "order_status": {
                      "type": "string"
                    },
                    "order_token": {
                      "type": "string"
                    },
                    "order_expiry_time": {
                      "type": "string"
                    },
                    "order_note": {
                      "type": "string"
                    },
                    "payment_link": {
                      "type": "string"
                    },
                    "customer_details": {
                      "title": "CustomerDetails",
                      "example": {
                        "customer_id": "7112AAA812234",
                        "customer_email": "john@cashfree.com",
                        "customer_phone": "9908734801",
                        "customer_bank_account_number": "1518121112",
                        "customer_bank_ifsc": "CITI0000001",
                        "customer_bank_code": 3333
                      },
                      "type": "object",
                      "properties": {
                        "customer_id": {
                          "type": "string",
                          "description": "A unique identifier for the customer. Use alphanumeric values only.",
                          "minLength": 3,
                          "maxLength": 50
                        },
                        "customer_email": {
                          "type": "string",
                          "description": "Customer email address.",
                          "minLength": 3,
                          "maxLength": 100
                        },
                        "customer_phone": {
                          "type": "string",
                          "description": "Customer phone number.",
                          "minLength": 10,
                          "maxLength": 10
                        },
                        "customer_bank_account_number": {
                          "type": "string",
                          "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
                          "minLength": 3,
                          "maxLength": 20
                        },
                        "customer_bank_ifsc": {
                          "type": "string",
                          "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
                        },
                        "customer_bank_code": {
                          "type": "string",
                          "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
                        }
                      },
                      "required": [
                        "customer_id",
                        "customer_email",
                        "customer_phone"
                      ]
                    },
                    "order_meta": {
                      "title": "OrderMeta",
                      "example": {
                        "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
                        "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
                      },
                      "type": "object",
                      "properties": {
                        "return_url": {
                          "type": "string",
                          "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
                        },
                        "notify_url": {
                          "type": "string",
                          "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
                        },
                        "payment_methods": {
                          "type": "string",
                          "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                        }
                      }
                    },
                    "payments": {
                      "title": "PaymentURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
                        }
                      }
                    },
                    "settlements": {
                      "title": "SettlementURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
                        }
                      }
                    },
                    "refunds": {
                      "title": "RefundURLObject",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/payments": {
      "get": {
        "summary": "Get Payments for an Order",
        "description": "Use this API to view all payment details for an order.",
        "tags": [
          "Payments"
        ],
        "operationId": "GetPaymentsfororder",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Order or the invoice ID for which you want to view the payment details."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "PaymentsEntity",
                    "type": "object",
                    "example": {
                      "cf_payment_id": 12376123,
                      "order_id": "order_8123",
                      "entity": "payment",
                      "payment_currency": "INR",
                      "order_amount": 10.01,
                      "is_captured": true,
                      "payment_group": "upi",
                      "authorization": null,
                      "payment_method": {
                        "upi": {
                          "channel": "collect",
                          "upi_id": "rohit@icici"
                        }
                      },
                      "payment_amount": 10.01,
                      "payment_time": "2021-07-23T12:15:06+05:30",
                      "payment_completion_time": "2021-07-23T12:18:59+05:30",
                      "payment_status": "SUCCESS",
                      "payment_message": "Transaction successful",
                      "bank_reference": "P78112898712",
                      "auth_id": "A898101"
                    },
                    "properties": {
                      "cf_payment_id": {
                        "type": "integer"
                      },
                      "order_id": {
                        "type": "string"
                      },
                      "entity": {
                        "type": "string"
                      },
                      "is_captured": {
                        "type": "boolean"
                      },
                      "order_amount": {
                        "type": "number",
                        "description": "Order amount can be different from payment amount if you collect service fee from the customer"
                      },
                      "payment_group": {
                        "type": "string",
                        "description": "Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']"
                      },
                      "payment_currency": {
                        "type": "string"
                      },
                      "payment_amount": {
                        "type": "number"
                      },
                      "payment_time": {
                        "type": "string",
                        "description": "This is the time when the payment was initiated"
                      },
                      "payment_completion_time": {
                        "type": "string",
                        "description": "This is the time when the payment reaches its terminal state"
                      },
                      "payment_status": {
                        "type": "string",
                        "enum": [
                          "SUCCESS",
                          "NOT_ATTEMPTED",
                          "FAILED",
                          "USER_DROPPED",
                          "VOID",
                          "CANCELLED",
                          "PENDING"
                        ],
                        "description": "The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]"
                      },
                      "payment_message": {
                        "type": "string"
                      },
                      "bank_reference": {
                        "type": "string"
                      },
                      "auth_id": {
                        "type": "string"
                      },
                      "authorization": {
                        "title": "AuthorizationInPayments",
                        "description": "The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.",
                        "example": {
                          "action": "CAPTURE",
                          "status": "PENDING",
                          "captured_amount": 100,
                          "start_time": "2022-02-09T18:04:34+05:30",
                          "end_time": "2022-02-19T18:04:34+05:30",
                          "approve_by": "2022-02-09T18:04:34+05:30"
                        },
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "CAPTURE",
                              "VOID"
                            ],
                            "description": "One of CAPTURE or VOID"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "PENDING"
                            ],
                            "description": "One of SUCCESS or PENDING"
                          },
                          "captured_amount": {
                            "type": "number",
                            "description": "The captured amount for this authorization request"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "Start time of this authorization hold (only for UPI)"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "End time of this authorization hold (only for UPI)"
                          },
                          "approve_by": {
                            "type": "string",
                            "description": "Approve by time as passed in the authorization request (only for UPI)"
                          }
                        }
                      },
                      "payment_method": {
                        "title": "PaymentMethodInPaymentsEntity",
                        "properties": {
                          "payment_method": {
                            "oneOf": [
                              {
                                "title": "PaymentMethodCardInPaymentsEntity",
                                "example": {
                                  "channel": "link",
                                  "card_number": "41111xxxxxx111",
                                  "card_network": "visa",
                                  "card_type": "credit_card",
                                  "card_country": "IN",
                                  "card_bank_name": "HDFC Bank"
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "card_number": {
                                    "type": "string"
                                  },
                                  "card_network": {
                                    "type": "string"
                                  },
                                  "card_type": {
                                    "type": "string"
                                  },
                                  "card_country": {
                                    "type": "string"
                                  },
                                  "card_bank_name": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "title": "PaymentMethodNetBankingInPaymentsEntity",
                                "example": {
                                  "channel": "link",
                                  "netbanking_bank_code": 3044,
                                  "netbanking_bank_name": "State Bank of India"
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "netbanking_bank_code": {
                                    "type": "string"
                                  },
                                  "netbanking_bank_name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "channel",
                                  "netbanking_bank_name",
                                  "netbanking_bank_code"
                                ]
                              },
                              {
                                "title": "PaymentMethodUPIInPaymentsEntity",
                                "example": {
                                  "channel": "collect",
                                  "upi_id": "980123781@upi"
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "upi_id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "channel"
                                ]
                              },
                              {
                                "title": "PaymentMethodAppInPaymentsEntity",
                                "example": {
                                  "channel": "link",
                                  "provider": "paytm",
                                  "phone": 1234512345
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "title": "PaymentMethodCardlessEMIInPaymentsEntity",
                                "example": {
                                  "channel": "link",
                                  "provider": "flexmoney",
                                  "phone": 9908761211
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "title": "PaymentMethodPaylaterInPaymentsEntity",
                                "example": {
                                  "channel": "link",
                                  "provider": "lazypay",
                                  "phone": 9908761211
                                },
                                "type": "object",
                                "properties": {
                                  "channel": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/payments/{cf_payment_id}": {
      "get": {
        "summary": "Get Payment by ID",
        "description": "Use this API to view payment details of an order for a payment ID.",
        "tags": [
          "Payments"
        ],
        "operationId": "GetPaymentbyId",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The order or invoice ID for which you want to view the payment details."
            }
          },
          {
            "in": "path",
            "name": "cf_payment_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Cashfree payment ID to view the payment details of an order."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentsEntity",
                  "type": "object",
                  "example": {
                    "cf_payment_id": 12376123,
                    "order_id": "order_8123",
                    "entity": "payment",
                    "payment_currency": "INR",
                    "order_amount": 10.01,
                    "is_captured": true,
                    "payment_group": "upi",
                    "authorization": null,
                    "payment_method": {
                      "upi": {
                        "channel": "collect",
                        "upi_id": "rohit@icici"
                      }
                    },
                    "payment_amount": 10.01,
                    "payment_time": "2021-07-23T12:15:06+05:30",
                    "payment_completion_time": "2021-07-23T12:18:59+05:30",
                    "payment_status": "SUCCESS",
                    "payment_message": "Transaction successful",
                    "bank_reference": "P78112898712",
                    "auth_id": "A898101"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "integer"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "is_captured": {
                      "type": "boolean"
                    },
                    "order_amount": {
                      "type": "number",
                      "description": "Order amount can be different from payment amount if you collect service fee from the customer"
                    },
                    "payment_group": {
                      "type": "string",
                      "description": "Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']"
                    },
                    "payment_currency": {
                      "type": "string"
                    },
                    "payment_amount": {
                      "type": "number"
                    },
                    "payment_time": {
                      "type": "string",
                      "description": "This is the time when the payment was initiated"
                    },
                    "payment_completion_time": {
                      "type": "string",
                      "description": "This is the time when the payment reaches its terminal state"
                    },
                    "payment_status": {
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "NOT_ATTEMPTED",
                        "FAILED",
                        "USER_DROPPED",
                        "VOID",
                        "CANCELLED",
                        "PENDING"
                      ],
                      "description": "The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]"
                    },
                    "payment_message": {
                      "type": "string"
                    },
                    "bank_reference": {
                      "type": "string"
                    },
                    "auth_id": {
                      "type": "string"
                    },
                    "authorization": {
                      "title": "AuthorizationInPayments",
                      "description": "The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.",
                      "example": {
                        "action": "CAPTURE",
                        "status": "PENDING",
                        "captured_amount": 100,
                        "start_time": "2022-02-09T18:04:34+05:30",
                        "end_time": "2022-02-19T18:04:34+05:30",
                        "approve_by": "2022-02-09T18:04:34+05:30"
                      },
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "enum": [
                            "CAPTURE",
                            "VOID"
                          ],
                          "description": "One of CAPTURE or VOID"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "SUCCESS",
                            "PENDING"
                          ],
                          "description": "One of SUCCESS or PENDING"
                        },
                        "captured_amount": {
                          "type": "number",
                          "description": "The captured amount for this authorization request"
                        },
                        "start_time": {
                          "type": "string",
                          "description": "Start time of this authorization hold (only for UPI)"
                        },
                        "end_time": {
                          "type": "string",
                          "description": "End time of this authorization hold (only for UPI)"
                        },
                        "approve_by": {
                          "type": "string",
                          "description": "Approve by time as passed in the authorization request (only for UPI)"
                        }
                      }
                    },
                    "payment_method": {
                      "title": "PaymentMethodInPaymentsEntity",
                      "properties": {
                        "payment_method": {
                          "oneOf": [
                            {
                              "title": "PaymentMethodCardInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "card_number": "41111xxxxxx111",
                                "card_network": "visa",
                                "card_type": "credit_card",
                                "card_country": "IN",
                                "card_bank_name": "HDFC Bank"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "card_number": {
                                  "type": "string"
                                },
                                "card_network": {
                                  "type": "string"
                                },
                                "card_type": {
                                  "type": "string"
                                },
                                "card_country": {
                                  "type": "string"
                                },
                                "card_bank_name": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodNetBankingInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "netbanking_bank_code": 3044,
                                "netbanking_bank_name": "State Bank of India"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "netbanking_bank_code": {
                                  "type": "string"
                                },
                                "netbanking_bank_name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "channel",
                                "netbanking_bank_name",
                                "netbanking_bank_code"
                              ]
                            },
                            {
                              "title": "PaymentMethodUPIInPaymentsEntity",
                              "example": {
                                "channel": "collect",
                                "upi_id": "980123781@upi"
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "upi_id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "channel"
                              ]
                            },
                            {
                              "title": "PaymentMethodAppInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "paytm",
                                "phone": 1234512345
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodCardlessEMIInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "flexmoney",
                                "phone": 9908761211
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "title": "PaymentMethodPaylaterInPaymentsEntity",
                              "example": {
                                "channel": "link",
                                "provider": "lazypay",
                                "phone": 9908761211
                              },
                              "type": "object",
                              "properties": {
                                "channel": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/refunds": {
      "post": {
        "summary": "Create Refund",
        "description": "Use this API to initiate refunds.",
        "tags": [
          "Refunds"
        ],
        "operationId": "Createrefund",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Order or the invoice ID for which refund must be initiated."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateRefundRequest",
                "example": {
                  "refund_amount": 1,
                  "refund_id": "refund_00912",
                  "refund_note": "refund note for reference"
                },
                "type": "object",
                "properties": {
                  "refund_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be refunded. Should be lesser than or equal to the transaction amount. (Decimals allowed)"
                  },
                  "refund_id": {
                    "type": "string",
                    "description": "An unique ID to associate the refund with. Provie alphanumeric values",
                    "minLength": 3,
                    "maxLength": 40
                  },
                  "refund_note": {
                    "type": "string",
                    "description": "A refund note for your reference.",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "refund_splits": {
                    "type": "array",
                    "items": {
                      "title": "VendorSplit",
                      "type": "object",
                      "example": {
                        "vendor_id": "Vendor01",
                        "amount": "100.1"
                      },
                      "properties": {
                        "vendor_id": {
                          "type": "string",
                          "description": "Vendor id created in Cashfree system"
                        },
                        "amount": {
                          "type": "number",
                          "description": "Amount which will be associated with this vendor"
                        },
                        "percentage": {
                          "type": "number",
                          "description": "Percentage of order amount which shall get added to vendor account"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "refund_amount",
                  "refund_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refund created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RefundsEntity",
                  "type": "object",
                  "example": {
                    "cf_payment_id": 918812,
                    "cf_refund_id": "refund_1553338",
                    "refund_id": "REF-123",
                    "order_id": "c6G-QMcbm1848",
                    "entity": "refund",
                    "refund_amount": 100.81,
                    "refund_currency": "INR",
                    "refund_note": "Refund for order #123",
                    "refund_status": "SUCCESS",
                    "refund_type": "MERCHANT_INITIATED",
                    "refund_splits": [],
                    "status_description": "In Progress",
                    "refund_arn": "RF12312",
                    "metadata": null,
                    "created_at": "2021-07-25T08:57:52+05:30",
                    "processed_at": "2021-07-25T12:57:52+05:30",
                    "refund_charge": 0,
                    "refund_mode": "STANDARD"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "integer",
                      "description": "Cashfree Payments ID of the payment for which refund is initiated"
                    },
                    "cf_refund_id": {
                      "type": "string",
                      "description": "Cashfree Payments ID for a refund"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Merchant’s order Id of the order for which refund is initiated"
                    },
                    "refund_id": {
                      "type": "string",
                      "description": "Merchant’s refund ID of the refund"
                    },
                    "entity": {
                      "type": "string",
                      "enum": [
                        "refund"
                      ],
                      "description": "Type of object"
                    },
                    "refund_amount": {
                      "type": "number",
                      "description": "Amount that is refunded"
                    },
                    "refund_currency": {
                      "type": "string",
                      "description": "Currency of the refund amount"
                    },
                    "refund_note": {
                      "type": "string",
                      "description": "Note added by merchant for the refund"
                    },
                    "refund_status": {
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "PENDING",
                        "CANCELLED",
                        "ONHOLD"
                      ],
                      "description": "This can be one of [\"SUCCESS\", \"PENDING\", \"CANCELLED\", \"ONHOLD\"]"
                    },
                    "refund_arn": {
                      "type": "string",
                      "description": "The bank reference number for refund"
                    },
                    "refund_charge": {
                      "type": "number",
                      "description": "Charges in INR for processing refund"
                    },
                    "status_description": {
                      "type": "string",
                      "description": "Description of refund status"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs"
                    },
                    "refund_splits": {
                      "type": "array",
                      "items": {
                        "title": "VendorSplit",
                        "type": "object",
                        "example": {
                          "vendor_id": "Vendor01",
                          "amount": "100.1"
                        },
                        "properties": {
                          "vendor_id": {
                            "type": "string",
                            "description": "Vendor id created in Cashfree system"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount which will be associated with this vendor"
                          },
                          "percentage": {
                            "type": "number",
                            "description": "Percentage of order amount which shall get added to vendor account"
                          }
                        },
                        "description": "Refund split details"
                      }
                    },
                    "refund_type": {
                      "type": "string",
                      "enum": [
                        "PAYMENT_AUTO_REFUND",
                        "MERCHANT_INITIATED",
                        "UNRECONCILED_AUTO_REFUND"
                      ],
                      "description": "This can be one of [\"PAYMENT_AUTO_REFUND\", \"MERCHANT_INITIATED\", \"UNRECONCILED_AUTO_REFUND\"]"
                    },
                    "refund_mode": {
                      "type": "string",
                      "enum": [
                        "STANDARD",
                        "INSTANT"
                      ],
                      "description": "Method or speed of processing refund"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Time of refund creation"
                    },
                    "processed_at": {
                      "type": "string",
                      "description": "Time when refund was processed successfully"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get All Refunds for an Order",
        "description": "Use this API to fetch all refunds processed against an order.",
        "tags": [
          "Refunds"
        ],
        "operationId": "Getallrefundsfororder",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Order or the invoice ID for which you want to view the refund details."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "RefundsEntity",
                    "type": "object",
                    "example": {
                      "cf_payment_id": 918812,
                      "cf_refund_id": "refund_1553338",
                      "refund_id": "REF-123",
                      "order_id": "c6G-QMcbm1848",
                      "entity": "refund",
                      "refund_amount": 100.81,
                      "refund_currency": "INR",
                      "refund_note": "Refund for order #123",
                      "refund_status": "SUCCESS",
                      "refund_type": "MERCHANT_INITIATED",
                      "refund_splits": [],
                      "status_description": "In Progress",
                      "refund_arn": "RF12312",
                      "metadata": null,
                      "created_at": "2021-07-25T08:57:52+05:30",
                      "processed_at": "2021-07-25T12:57:52+05:30",
                      "refund_charge": 0,
                      "refund_mode": "STANDARD"
                    },
                    "properties": {
                      "cf_payment_id": {
                        "type": "integer",
                        "description": "Cashfree Payments ID of the payment for which refund is initiated"
                      },
                      "cf_refund_id": {
                        "type": "string",
                        "description": "Cashfree Payments ID for a refund"
                      },
                      "order_id": {
                        "type": "string",
                        "description": "Merchant’s order Id of the order for which refund is initiated"
                      },
                      "refund_id": {
                        "type": "string",
                        "description": "Merchant’s refund ID of the refund"
                      },
                      "entity": {
                        "type": "string",
                        "enum": [
                          "refund"
                        ],
                        "description": "Type of object"
                      },
                      "refund_amount": {
                        "type": "number",
                        "description": "Amount that is refunded"
                      },
                      "refund_currency": {
                        "type": "string",
                        "description": "Currency of the refund amount"
                      },
                      "refund_note": {
                        "type": "string",
                        "description": "Note added by merchant for the refund"
                      },
                      "refund_status": {
                        "type": "string",
                        "enum": [
                          "SUCCESS",
                          "PENDING",
                          "CANCELLED",
                          "ONHOLD"
                        ],
                        "description": "This can be one of [\"SUCCESS\", \"PENDING\", \"CANCELLED\", \"ONHOLD\"]"
                      },
                      "refund_arn": {
                        "type": "string",
                        "description": "The bank reference number for refund"
                      },
                      "refund_charge": {
                        "type": "number",
                        "description": "Charges in INR for processing refund"
                      },
                      "status_description": {
                        "type": "string",
                        "description": "Description of refund status"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs"
                      },
                      "refund_splits": {
                        "type": "array",
                        "items": {
                          "title": "VendorSplit",
                          "type": "object",
                          "example": {
                            "vendor_id": "Vendor01",
                            "amount": "100.1"
                          },
                          "properties": {
                            "vendor_id": {
                              "type": "string",
                              "description": "Vendor id created in Cashfree system"
                            },
                            "amount": {
                              "type": "number",
                              "description": "Amount which will be associated with this vendor"
                            },
                            "percentage": {
                              "type": "number",
                              "description": "Percentage of order amount which shall get added to vendor account"
                            }
                          },
                          "description": "Refund split details"
                        }
                      },
                      "refund_type": {
                        "type": "string",
                        "enum": [
                          "PAYMENT_AUTO_REFUND",
                          "MERCHANT_INITIATED",
                          "UNRECONCILED_AUTO_REFUND"
                        ],
                        "description": "This can be one of [\"PAYMENT_AUTO_REFUND\", \"MERCHANT_INITIATED\", \"UNRECONCILED_AUTO_REFUND\"]"
                      },
                      "refund_mode": {
                        "type": "string",
                        "enum": [
                          "STANDARD",
                          "INSTANT"
                        ],
                        "description": "Method or speed of processing refund"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Time of refund creation"
                      },
                      "processed_at": {
                        "type": "string",
                        "description": "Time when refund was processed successfully"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/refunds/{refund_id}": {
      "get": {
        "summary": "Get Refund",
        "description": "Use this API to fetch a specific refund processed on your Cashfree Account.",
        "tags": [
          "Refunds"
        ],
        "operationId": "GetRefund",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Order or the invoice ID for which you want to view the refund details."
            }
          },
          {
            "in": "path",
            "name": "refund_id",
            "description": "Refund Id of the refund you want to fetch.",
            "required": true,
            "schema": {
              "type": "string",
              "description": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RefundsEntity",
                  "type": "object",
                  "example": {
                    "cf_payment_id": 918812,
                    "cf_refund_id": "refund_1553338",
                    "refund_id": "REF-123",
                    "order_id": "c6G-QMcbm1848",
                    "entity": "refund",
                    "refund_amount": 100.81,
                    "refund_currency": "INR",
                    "refund_note": "Refund for order #123",
                    "refund_status": "SUCCESS",
                    "refund_type": "MERCHANT_INITIATED",
                    "refund_splits": [],
                    "status_description": "In Progress",
                    "refund_arn": "RF12312",
                    "metadata": null,
                    "created_at": "2021-07-25T08:57:52+05:30",
                    "processed_at": "2021-07-25T12:57:52+05:30",
                    "refund_charge": 0,
                    "refund_mode": "STANDARD"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "integer",
                      "description": "Cashfree Payments ID of the payment for which refund is initiated"
                    },
                    "cf_refund_id": {
                      "type": "string",
                      "description": "Cashfree Payments ID for a refund"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Merchant’s order Id of the order for which refund is initiated"
                    },
                    "refund_id": {
                      "type": "string",
                      "description": "Merchant’s refund ID of the refund"
                    },
                    "entity": {
                      "type": "string",
                      "enum": [
                        "refund"
                      ],
                      "description": "Type of object"
                    },
                    "refund_amount": {
                      "type": "number",
                      "description": "Amount that is refunded"
                    },
                    "refund_currency": {
                      "type": "string",
                      "description": "Currency of the refund amount"
                    },
                    "refund_note": {
                      "type": "string",
                      "description": "Note added by merchant for the refund"
                    },
                    "refund_status": {
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "PENDING",
                        "CANCELLED",
                        "ONHOLD"
                      ],
                      "description": "This can be one of [\"SUCCESS\", \"PENDING\", \"CANCELLED\", \"ONHOLD\"]"
                    },
                    "refund_arn": {
                      "type": "string",
                      "description": "The bank reference number for refund"
                    },
                    "refund_charge": {
                      "type": "number",
                      "description": "Charges in INR for processing refund"
                    },
                    "status_description": {
                      "type": "string",
                      "description": "Description of refund status"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs"
                    },
                    "refund_splits": {
                      "type": "array",
                      "items": {
                        "title": "VendorSplit",
                        "type": "object",
                        "example": {
                          "vendor_id": "Vendor01",
                          "amount": "100.1"
                        },
                        "properties": {
                          "vendor_id": {
                            "type": "string",
                            "description": "Vendor id created in Cashfree system"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount which will be associated with this vendor"
                          },
                          "percentage": {
                            "type": "number",
                            "description": "Percentage of order amount which shall get added to vendor account"
                          }
                        },
                        "description": "Refund split details"
                      }
                    },
                    "refund_type": {
                      "type": "string",
                      "enum": [
                        "PAYMENT_AUTO_REFUND",
                        "MERCHANT_INITIATED",
                        "UNRECONCILED_AUTO_REFUND"
                      ],
                      "description": "This can be one of [\"PAYMENT_AUTO_REFUND\", \"MERCHANT_INITIATED\", \"UNRECONCILED_AUTO_REFUND\"]"
                    },
                    "refund_mode": {
                      "type": "string",
                      "enum": [
                        "STANDARD",
                        "INSTANT"
                      ],
                      "description": "Method or speed of processing refund"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Time of refund creation"
                    },
                    "processed_at": {
                      "type": "string",
                      "description": "Time when refund was processed successfully"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}/settlements": {
      "get": {
        "summary": "Get Settlements",
        "tags": [
          "Settlements"
        ],
        "operationId": "Getsettlements",
        "deprecated": false,
        "description": "Use this API to view all the settlements of a particular order.",
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Order ID for which you want to view the settlements."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SettlementsEntity",
                  "type": "object",
                  "example": {
                    "cf_payment_id": 553338,
                    "order_id": "order-12-127",
                    "entity": "settlement",
                    "order_amount": 100,
                    "payment_time": "2021-07-13T13:13:59+05:30",
                    "service_charge": 10,
                    "service_tax": 1.8,
                    "settlement_amount": 88.2,
                    "cf_settlement_id": 6121238,
                    "transfer_id": 238,
                    "transfer_time": "2021-07-25T12:57:52+05:30",
                    "transfer_utr": "N87912312",
                    "order_currency": "INR",
                    "settlement_currency": "INR"
                  },
                  "properties": {
                    "cf_payment_id": {
                      "type": "string"
                    },
                    "cf_settlement_id": {
                      "type": "string"
                    },
                    "settlement_currency": {
                      "type": "string"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "order_amount": {
                      "type": "number"
                    },
                    "payment_time": {
                      "type": "string"
                    },
                    "service_charge": {
                      "type": "number"
                    },
                    "service_tax": {
                      "type": "number"
                    },
                    "settlement_amount": {
                      "type": "number"
                    },
                    "settlement_id": {
                      "type": "integer"
                    },
                    "transfer_id": {
                      "type": "integer"
                    },
                    "transfer_time": {
                      "type": "string"
                    },
                    "transfer_utr": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/links": {
      "post": {
        "summary": "Create Payment Link",
        "description": "Use this API to create a new payment link. The created payment link url will be available in the API response parameter link_url.",
        "tags": [
          "Payment Links"
        ],
        "operationId": "CreatePaymentLink",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateLinkRequest",
                "example": {
                  "link_amount": 100,
                  "link_currency": "INR",
                  "link_minimum_partial_amount": 20,
                  "link_id": "my_link_id",
                  "link_partial_payments": true,
                  "customer_details": {
                    "customer_name": "John Doe",
                    "customer_phone": "9999999999",
                    "customer_email": "john@cashfree.com"
                  },
                  "link_expiry_time": "2021-10-14T15:04:05+05:30",
                  "link_purpose": "Payment for PlayStation 11",
                  "link_notify": {
                    "send_sms": false,
                    "send_email": true
                  },
                  "link_auto_reminders": true,
                  "link_notes": {
                    "key_1": "value_1",
                    "key_2": "value_2"
                  },
                  "link_meta": {
                    "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                    "upi_intent": false,
                    "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                  }
                },
                "type": "object",
                "properties": {
                  "link_id": {
                    "type": "string",
                    "description": "Unique Identifier (provided by merchant) for the Link. Alphanumeric and only - and _ allowed (50 character limit). Use this for other link-related APIs.",
                    "maxLength": 50
                  },
                  "link_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be collected using this link. Provide upto two decimals for paise."
                  },
                  "link_currency": {
                    "type": "string",
                    "description": "Currency for the payment link. Default is INR. Contact care@cashfree.com to enable new currencies.",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "link_purpose": {
                    "type": "string",
                    "description": "A brief description for which payment must be collected. This is shown to the customer.",
                    "maxLength": 500
                  },
                  "customer_details": {
                    "title": "customer_details",
                    "type": "object",
                    "example": {
                      "customer_name": "John Doe",
                      "customer_phone": "9999999999",
                      "customer_email": "john@cashfree.com"
                    },
                    "properties": {
                      "customer_phone": {
                        "type": "string",
                        "description": "Customer phone number"
                      },
                      "customer_email": {
                        "type": "string",
                        "description": "Customer email address"
                      },
                      "customer_name": {
                        "type": "string",
                        "description": "Customer name"
                      }
                    },
                    "required": [
                      "customer_phone"
                    ]
                  },
                  "link_partial_payments": {
                    "type": "boolean",
                    "description": "If \"true\", customer can make partial payments for the link."
                  },
                  "link_minimum_partial_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Minimum amount in first installment that needs to be paid by the customer if partial payments are enabled. This should be less than the link_amount."
                  },
                  "link_expiry_time": {
                    "type": "string",
                    "description": "Time after which the link expires. Customers will not be able to make the payment beyond the time specified here. You can provide them in a valid ISO 8601 time format. Default is 30 days."
                  },
                  "link_notify": {
                    "title": "link_notify",
                    "type": "object",
                    "example": {
                      "send_sms": false,
                      "send_email": true
                    },
                    "properties": {
                      "send_sms": {
                        "type": "boolean",
                        "description": "If \"true\", Cashfree will send sms on customer_phone"
                      },
                      "send_email": {
                        "type": "boolean",
                        "description": "If \"true\", Cashfree will send email on customer_email"
                      }
                    }
                  },
                  "link_auto_reminders": {
                    "type": "boolean",
                    "description": "If \"true\", reminders will be sent to customers for collecting payments."
                  },
                  "link_notes": {
                    "title": "link_notes",
                    "type": "object",
                    "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
                    "example": {
                      "key_1": "value_1",
                      "key_2": "value_2"
                    },
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "link_meta": {
                    "title": "link_meta",
                    "type": "object",
                    "example": {
                      "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                      "upi_intent": false,
                      "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                    },
                    "properties": {
                      "notify_url": {
                        "type": "string",
                        "description": "Notification URL for server-server communication. It should be an https URL."
                      },
                      "upi_intent": {
                        "type": "boolean",
                        "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
                      },
                      "return_url": {
                        "type": "string",
                        "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
                      },
                      "payment_methods": {
                        "type": "string",
                        "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                      }
                    }
                  }
                },
                "required": [
                  "link_amount",
                  "link_currency",
                  "link_id",
                  "customer_details",
                  "link_purpose"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment Link created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "LinkCreationResponse",
                  "type": "object",
                  "example": {
                    "cf_link_id": 1996567,
                    "link_id": "my_link_id",
                    "link_status": "ACTIVE",
                    "link_currency": "INR",
                    "link_amount": 100,
                    "link_amount_paid": 0,
                    "link_partial_payments": true,
                    "link_minimum_partial_amount": 20,
                    "link_purpose": "Payment for PlayStation 11",
                    "link_created_at": "2021-09-30T17:05:01+05:30",
                    "customer_details": {
                      "customer_name": "John Doe",
                      "customer_phone": "9999999999",
                      "customer_email": "john@cashfree.com"
                    },
                    "link_meta": {
                      "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                      "upi_intent": false,
                      "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                    },
                    "link_url": "https://payments-test.cashfree.com/links/o1tf1nvcvjhg",
                    "link_expiry_time": "2021-10-14T15:04:05+05:30",
                    "link_notes": {
                      "key_1": "value_1",
                      "key_2": "value_2"
                    },
                    "link_auto_reminders": true,
                    "link_notify": {
                      "send_sms": false,
                      "send_email": true
                    }
                  },
                  "properties": {
                    "cf_link_id": {
                      "type": "integer"
                    },
                    "link_id": {
                      "type": "string"
                    },
                    "link_status": {
                      "type": "string"
                    },
                    "link_currency": {
                      "type": "string"
                    },
                    "link_amount": {
                      "type": "number"
                    },
                    "link_amount_paid": {
                      "type": "number"
                    },
                    "link_partial_payments": {
                      "type": "boolean"
                    },
                    "link_minimum_partial_amount": {
                      "type": "number"
                    },
                    "link_purpose": {
                      "type": "string"
                    },
                    "link_created_at": {
                      "type": "string"
                    },
                    "customer_details": {
                      "title": "customer_details",
                      "type": "object",
                      "example": {
                        "customer_name": "John Doe",
                        "customer_phone": "9999999999",
                        "customer_email": "john@cashfree.com"
                      },
                      "properties": {
                        "customer_phone": {
                          "type": "string",
                          "description": "Customer phone number"
                        },
                        "customer_email": {
                          "type": "string",
                          "description": "Customer email address"
                        },
                        "customer_name": {
                          "type": "string",
                          "description": "Customer name"
                        }
                      },
                      "required": [
                        "customer_phone"
                      ]
                    },
                    "link_meta": {
                      "title": "link_meta",
                      "type": "object",
                      "example": {
                        "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                        "upi_intent": false,
                        "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                      },
                      "properties": {
                        "notify_url": {
                          "type": "string",
                          "description": "Notification URL for server-server communication. It should be an https URL."
                        },
                        "upi_intent": {
                          "type": "boolean",
                          "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
                        },
                        "return_url": {
                          "type": "string",
                          "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
                        },
                        "payment_methods": {
                          "type": "string",
                          "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                        }
                      }
                    },
                    "link_url": {
                      "type": "string"
                    },
                    "link_expiry_time": {
                      "type": "string"
                    },
                    "link_notes": {
                      "title": "link_notes",
                      "type": "object",
                      "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
                      "example": {
                        "key_1": "value_1",
                        "key_2": "value_2"
                      },
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "link_auto_reminders": {
                      "type": "boolean"
                    },
                    "link_notify": {
                      "title": "link_notify",
                      "type": "object",
                      "example": {
                        "send_sms": false,
                        "send_email": true
                      },
                      "properties": {
                        "send_sms": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send sms on customer_phone"
                        },
                        "send_email": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send email on customer_email"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/links/{link_id}": {
      "get": {
        "summary": "Fetch Payment Link Details",
        "description": "Use this API to view all details and status of a payment link.",
        "tags": [
          "Payment Links"
        ],
        "operationId": "GetPaymentLinkDetails",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "link_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The payment link ID for which you want to view the details."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "LinkCreationResponse",
                  "type": "object",
                  "example": {
                    "cf_link_id": 1996567,
                    "link_id": "my_link_id",
                    "link_status": "ACTIVE",
                    "link_currency": "INR",
                    "link_amount": 100,
                    "link_amount_paid": 0,
                    "link_partial_payments": true,
                    "link_minimum_partial_amount": 20,
                    "link_purpose": "Payment for PlayStation 11",
                    "link_created_at": "2021-09-30T17:05:01+05:30",
                    "customer_details": {
                      "customer_name": "John Doe",
                      "customer_phone": "9999999999",
                      "customer_email": "john@cashfree.com"
                    },
                    "link_meta": {
                      "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                      "upi_intent": false,
                      "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                    },
                    "link_url": "https://payments-test.cashfree.com/links/o1tf1nvcvjhg",
                    "link_expiry_time": "2021-10-14T15:04:05+05:30",
                    "link_notes": {
                      "key_1": "value_1",
                      "key_2": "value_2"
                    },
                    "link_auto_reminders": true,
                    "link_notify": {
                      "send_sms": false,
                      "send_email": true
                    }
                  },
                  "properties": {
                    "cf_link_id": {
                      "type": "integer"
                    },
                    "link_id": {
                      "type": "string"
                    },
                    "link_status": {
                      "type": "string"
                    },
                    "link_currency": {
                      "type": "string"
                    },
                    "link_amount": {
                      "type": "number"
                    },
                    "link_amount_paid": {
                      "type": "number"
                    },
                    "link_partial_payments": {
                      "type": "boolean"
                    },
                    "link_minimum_partial_amount": {
                      "type": "number"
                    },
                    "link_purpose": {
                      "type": "string"
                    },
                    "link_created_at": {
                      "type": "string"
                    },
                    "customer_details": {
                      "title": "customer_details",
                      "type": "object",
                      "example": {
                        "customer_name": "John Doe",
                        "customer_phone": "9999999999",
                        "customer_email": "john@cashfree.com"
                      },
                      "properties": {
                        "customer_phone": {
                          "type": "string",
                          "description": "Customer phone number"
                        },
                        "customer_email": {
                          "type": "string",
                          "description": "Customer email address"
                        },
                        "customer_name": {
                          "type": "string",
                          "description": "Customer name"
                        }
                      },
                      "required": [
                        "customer_phone"
                      ]
                    },
                    "link_meta": {
                      "title": "link_meta",
                      "type": "object",
                      "example": {
                        "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                        "upi_intent": false,
                        "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                      },
                      "properties": {
                        "notify_url": {
                          "type": "string",
                          "description": "Notification URL for server-server communication. It should be an https URL."
                        },
                        "upi_intent": {
                          "type": "boolean",
                          "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
                        },
                        "return_url": {
                          "type": "string",
                          "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
                        },
                        "payment_methods": {
                          "type": "string",
                          "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                        }
                      }
                    },
                    "link_url": {
                      "type": "string"
                    },
                    "link_expiry_time": {
                      "type": "string"
                    },
                    "link_notes": {
                      "title": "link_notes",
                      "type": "object",
                      "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
                      "example": {
                        "key_1": "value_1",
                        "key_2": "value_2"
                      },
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "link_auto_reminders": {
                      "type": "boolean"
                    },
                    "link_notify": {
                      "title": "link_notify",
                      "type": "object",
                      "example": {
                        "send_sms": false,
                        "send_email": true
                      },
                      "properties": {
                        "send_sms": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send sms on customer_phone"
                        },
                        "send_email": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send email on customer_email"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/links/{link_id}/orders": {
      "get": {
        "summary": "Get Orders for a Payment Link",
        "description": "Use this API to view all order details for a payment link.",
        "tags": [
          "Payment Links"
        ],
        "operationId": "GetPaymentLinkOrders",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "link_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The payment link ID for which you want to view the order details."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "LinkOrdersResponse",
                    "type": "object",
                    "example": {
                      "cf_order_id": 2305826,
                      "customer_details": {
                        "customer_name": "John Doe",
                        "customer_phone": "9999999999",
                        "customer_email": "john@cashfree.com"
                      },
                      "entity": "order",
                      "link_id": "get_order_trial_1",
                      "order_amount": 10.12,
                      "order_currency": "INR",
                      "order_expiry_time": "2022-04-01T16:29:09+05:30",
                      "order_id": "order_271vovQ3PTZAx3fDI0xtZbC4jkPET",
                      "order_note": "payment_link_2011690",
                      "order_status": "PAID",
                      "order_token": "79byj5123g6912mki3",
                      "payments": {
                        "title": "PaymentURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
                          }
                        }
                      },
                      "refunds": {
                        "title": "RefundURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
                          }
                        }
                      },
                      "settlements": {
                        "title": "SettlementURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
                          }
                        }
                      }
                    },
                    "properties": {
                      "cf_order_id": {
                        "type": "integer"
                      },
                      "order_id": {
                        "type": "string"
                      },
                      "entity": {
                        "type": "string"
                      },
                      "order_currency": {
                        "type": "string"
                      },
                      "order_amount": {
                        "type": "number"
                      },
                      "order_status": {
                        "type": "string"
                      },
                      "order_token": {
                        "type": "string"
                      },
                      "order_expiry_time": {
                        "type": "string"
                      },
                      "order_note": {
                        "type": "string"
                      },
                      "customer_details": {
                        "title": "customer_details",
                        "type": "object",
                        "example": {
                          "customer_name": "John Doe",
                          "customer_phone": "9999999999",
                          "customer_email": "john@cashfree.com"
                        },
                        "properties": {
                          "customer_phone": {
                            "type": "string",
                            "description": "Customer phone number"
                          },
                          "customer_email": {
                            "type": "string",
                            "description": "Customer email address"
                          },
                          "customer_name": {
                            "type": "string",
                            "description": "Customer name"
                          }
                        },
                        "required": [
                          "customer_phone"
                        ]
                      },
                      "payments": {
                        "title": "PaymentURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
                          }
                        }
                      },
                      "settlements": {
                        "title": "SettlementURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
                          }
                        }
                      },
                      "refunds": {
                        "title": "RefundURLObject",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/links/{link_id}/cancel": {
      "post": {
        "summary": "Cancel Payment Link",
        "description": "Use this API to cancel a payment link. No further payments can be done against a cancelled link. Only a link in ACTIVE status can be cancelled.",
        "tags": [
          "Payment Links"
        ],
        "operationId": "CancelPaymentLink",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "link_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The payment link ID which you want to cancel."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment Link cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "title": "LinkCancelledResponse",
                  "type": "object",
                  "example": {
                    "cf_link_id": 1996567,
                    "link_id": "my_link_id",
                    "link_status": "CANCELLED",
                    "link_currency": "INR",
                    "link_amount": 100,
                    "link_amount_paid": 0,
                    "link_partial_payments": false,
                    "link_minimum_partial_amount": 0,
                    "link_purpose": "Payment for PlayStation 11",
                    "link_created_at": "2021-09-30T17:05:01+05:30",
                    "customer_details": {
                      "customer_name": "John Doe",
                      "customer_phone": "9999999999",
                      "customer_email": "john@cashfree.com"
                    },
                    "link_meta": {
                      "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                      "upi_intent": false,
                      "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                    },
                    "link_url": "https://payments-test.cashfree.com/links/o1tf1nvcvjhg",
                    "link_expiry_time": "2021-10-14T15:04:05+05:30",
                    "link_notes": {
                      "key_1": "value_1",
                      "key_2": "value_2"
                    },
                    "link_auto_reminders": true,
                    "link_notify": {
                      "send_sms": false,
                      "send_email": true
                    }
                  },
                  "properties": {
                    "cf_link_id": {
                      "type": "integer"
                    },
                    "link_id": {
                      "type": "string"
                    },
                    "link_status": {
                      "type": "string"
                    },
                    "link_currency": {
                      "type": "string"
                    },
                    "link_amount": {
                      "type": "number"
                    },
                    "link_amount_paid": {
                      "type": "number"
                    },
                    "link_partial_payments": {
                      "type": "boolean"
                    },
                    "link_minimum_partial_amount": {
                      "type": "number"
                    },
                    "link_purpose": {
                      "type": "string"
                    },
                    "link_created_at": {
                      "type": "string"
                    },
                    "customer_details": {
                      "title": "customer_details",
                      "type": "object",
                      "example": {
                        "customer_name": "John Doe",
                        "customer_phone": "9999999999",
                        "customer_email": "john@cashfree.com"
                      },
                      "properties": {
                        "customer_phone": {
                          "type": "string",
                          "description": "Customer phone number"
                        },
                        "customer_email": {
                          "type": "string",
                          "description": "Customer email address"
                        },
                        "customer_name": {
                          "type": "string",
                          "description": "Customer name"
                        }
                      },
                      "required": [
                        "customer_phone"
                      ]
                    },
                    "link_meta": {
                      "title": "link_meta",
                      "type": "object",
                      "example": {
                        "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
                        "upi_intent": false,
                        "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
                      },
                      "properties": {
                        "notify_url": {
                          "type": "string",
                          "description": "Notification URL for server-server communication. It should be an https URL."
                        },
                        "upi_intent": {
                          "type": "boolean",
                          "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
                        },
                        "return_url": {
                          "type": "string",
                          "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
                        },
                        "payment_methods": {
                          "type": "string",
                          "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
                        }
                      }
                    },
                    "link_url": {
                      "type": "string"
                    },
                    "link_expiry_time": {
                      "type": "string"
                    },
                    "link_notes": {
                      "title": "link_notes",
                      "type": "object",
                      "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
                      "example": {
                        "key_1": "value_1",
                        "key_2": "value_2"
                      },
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "link_auto_reminders": {
                      "type": "boolean"
                    },
                    "link_notify": {
                      "title": "link_notify",
                      "type": "object",
                      "example": {
                        "send_sms": false,
                        "send_email": true
                      },
                      "properties": {
                        "send_sms": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send sms on customer_phone"
                        },
                        "send_email": {
                          "type": "boolean",
                          "description": "If \"true\", Cashfree will send email on customer_email"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Cannot cancel Payment Link if status is not ACTIVE",
            "content": {
              "application/json": {
                "schema": {
                  "title": "LinkCancelledError",
                  "example": {
                    "message": "Only link in ACTIVE state can be cancelled",
                    "code": "link_not_active",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/instruments": {
      "get": {
        "summary": "Fetch All Saved Instruments",
        "description": "To get all saved instruments for a customer id",
        "tags": [
          "Token Vault"
        ],
        "operationId": "fetchAllSavedInstruments",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The customer_id for which all the saved cards are queried"
            }
          },
          {
            "in": "query",
            "name": "instrument_type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "card"
              ],
              "description": "type to instrument to query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FetchAllSavedInstruments",
                    "example": {
                      "customer_id": "siddhesh_desai",
                      "afa_reference": 740324562,
                      "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
                      "instrument_type": "card",
                      "instrument_uid": "0d8f70838cc5af8b1cd2bc0fe71278551fd3f1101e40020d89ad22ceba4f933c",
                      "instrument_display": "xxxxxxxxxxxx4375",
                      "instrument_status": "ACTIVE",
                      "created_at": "2021-11-11 16:57:57",
                      "instrument_meta": {
                        "card_network": "VISA",
                        "card_bank_name": "HDFC Bank Limited",
                        "card_country": "IN",
                        "card_type": "DEBIT_CARD",
                        "card_token_details": null
                      }
                    },
                    "properties": {
                      "customer_id": {
                        "type": "string",
                        "description": "customer_id for which the instrument was saved"
                      },
                      "afa_reference": {
                        "type": "integer",
                        "description": "cf_payment_id of the successful transaction done while saving instrument"
                      },
                      "instrument_id": {
                        "type": "string",
                        "description": "saved instrument id"
                      },
                      "instrument_type": {
                        "type": "string",
                        "enum": [
                          "card"
                        ],
                        "description": "Type of the saved instrument"
                      },
                      "instrument_uid": {
                        "type": "string",
                        "description": "Unique id for the saved instrument"
                      },
                      "instrument_display": {
                        "type": "string",
                        "description": "masked card number displayed to the customer"
                      },
                      "instrument_status": {
                        "type": "string",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE"
                        ],
                        "description": "status of the saved instrument"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "timestamp at which instrument was saved"
                      },
                      "instrument_meta": {
                        "title": "InstrumentMeta",
                        "properties": {
                          "card_network": {
                            "type": "string",
                            "description": "card scheme/network of the saved card"
                          },
                          "card_bank_name": {
                            "type": "string",
                            "description": "Issuing bank name of saved card"
                          },
                          "card_country": {
                            "type": "string",
                            "description": "Issuing country of saved card"
                          },
                          "card_type": {
                            "type": "string",
                            "description": "Type of saved card"
                          },
                          "card_token_details": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/instruments/{instrument_id}": {
      "get": {
        "summary": "Fetch Single Saved Instrument",
        "description": "To get specific saved instrument for a customer id and instrument id",
        "tags": [
          "Token Vault"
        ],
        "operationId": "fetchSpecificSavedInstrument",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The customer_id for which all the saved cards are queried"
            }
          },
          {
            "in": "path",
            "name": "instrument_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instrument_id of the saved instrument which needs to be queried"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FetchAllSavedInstruments",
                  "example": {
                    "customer_id": "siddhesh_desai",
                    "afa_reference": 740324562,
                    "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
                    "instrument_type": "card",
                    "instrument_uid": "0d8f70838cc5af8b1cd2bc0fe71278551fd3f1101e40020d89ad22ceba4f933c",
                    "instrument_display": "xxxxxxxxxxxx4375",
                    "instrument_status": "ACTIVE",
                    "created_at": "2021-11-11 16:57:57",
                    "instrument_meta": {
                      "card_network": "VISA",
                      "card_bank_name": "HDFC Bank Limited",
                      "card_country": "IN",
                      "card_type": "DEBIT_CARD",
                      "card_token_details": null
                    }
                  },
                  "properties": {
                    "customer_id": {
                      "type": "string",
                      "description": "customer_id for which the instrument was saved"
                    },
                    "afa_reference": {
                      "type": "integer",
                      "description": "cf_payment_id of the successful transaction done while saving instrument"
                    },
                    "instrument_id": {
                      "type": "string",
                      "description": "saved instrument id"
                    },
                    "instrument_type": {
                      "type": "string",
                      "enum": [
                        "card"
                      ],
                      "description": "Type of the saved instrument"
                    },
                    "instrument_uid": {
                      "type": "string",
                      "description": "Unique id for the saved instrument"
                    },
                    "instrument_display": {
                      "type": "string",
                      "description": "masked card number displayed to the customer"
                    },
                    "instrument_status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ],
                      "description": "status of the saved instrument"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "timestamp at which instrument was saved"
                    },
                    "instrument_meta": {
                      "title": "InstrumentMeta",
                      "properties": {
                        "card_network": {
                          "type": "string",
                          "description": "card scheme/network of the saved card"
                        },
                        "card_bank_name": {
                          "type": "string",
                          "description": "Issuing bank name of saved card"
                        },
                        "card_country": {
                          "type": "string",
                          "description": "Issuing country of saved card"
                        },
                        "card_type": {
                          "type": "string",
                          "description": "Type of saved card"
                        },
                        "card_token_details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Saved Instrument",
        "description": "To delete a saved instrument for a customer id and instrument id",
        "tags": [
          "Token Vault"
        ],
        "operationId": "deleteSpecificSavedInstrument",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The customer_id for which instrument needs to be deleted"
            }
          },
          {
            "in": "path",
            "name": "instrument_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instrument_id which needs to be deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FetchAllSavedInstruments",
                  "example": {
                    "customer_id": "siddhesh_desai",
                    "afa_reference": 740324562,
                    "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
                    "instrument_type": "card",
                    "instrument_uid": "0d8f70838cc5af8b1cd2bc0fe71278551fd3f1101e40020d89ad22ceba4f933c",
                    "instrument_display": "xxxxxxxxxxxx4375",
                    "instrument_status": "ACTIVE",
                    "created_at": "2021-11-11 16:57:57",
                    "instrument_meta": {
                      "card_network": "VISA",
                      "card_bank_name": "HDFC Bank Limited",
                      "card_country": "IN",
                      "card_type": "DEBIT_CARD",
                      "card_token_details": null
                    }
                  },
                  "properties": {
                    "customer_id": {
                      "type": "string",
                      "description": "customer_id for which the instrument was saved"
                    },
                    "afa_reference": {
                      "type": "integer",
                      "description": "cf_payment_id of the successful transaction done while saving instrument"
                    },
                    "instrument_id": {
                      "type": "string",
                      "description": "saved instrument id"
                    },
                    "instrument_type": {
                      "type": "string",
                      "enum": [
                        "card"
                      ],
                      "description": "Type of the saved instrument"
                    },
                    "instrument_uid": {
                      "type": "string",
                      "description": "Unique id for the saved instrument"
                    },
                    "instrument_display": {
                      "type": "string",
                      "description": "masked card number displayed to the customer"
                    },
                    "instrument_status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE"
                      ],
                      "description": "status of the saved instrument"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "timestamp at which instrument was saved"
                    },
                    "instrument_meta": {
                      "title": "InstrumentMeta",
                      "properties": {
                        "card_network": {
                          "type": "string",
                          "description": "card scheme/network of the saved card"
                        },
                        "card_bank_name": {
                          "type": "string",
                          "description": "Issuing bank name of saved card"
                        },
                        "card_country": {
                          "type": "string",
                          "description": "Issuing country of saved card"
                        },
                        "card_type": {
                          "type": "string",
                          "description": "Type of saved card"
                        },
                        "card_token_details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/instruments/{instrument_id}/cryptogram": {
      "get": {
        "summary": "Fetch cryptogram for saved instrument",
        "description": "To get the card network token, token expiry and cryptogram for a saved instrument using instrument id",
        "tags": [
          "Token Vault"
        ],
        "operationId": "fetchCryptogram",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-client-id",
            "required": true,
            "schema": {
              "description": "Client app ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-client-secret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client secret key"
            }
          },
          {
            "in": "header",
            "name": "x-api-version",
            "schema": {
              "type": "string",
              "description": "API version to be used",
              "default": "2022-01-01"
            }
          },
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The customer_id of saved instrument"
            }
          },
          {
            "in": "path",
            "name": "instrument_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instrument_id of the saved instrument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FetchCryptogram",
                  "example": {
                    "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
                    "token_requestor_id": "22457512314",
                    "card_number": "4491365621601472",
                    "card_expiry_mm": "06",
                    "card_expiry_yy": "2025",
                    "cryptogram": "AQBBBBBBZatIlaIAmWKSghwBBBB=",
                    "card_display": "1234"
                  },
                  "properties": {
                    "instrument_id": {
                      "type": "string",
                      "description": "instrument_id of saved instrument"
                    },
                    "token_requestor_id": {
                      "type": "string",
                      "description": "TRID issued by card networks"
                    },
                    "card_number": {
                      "type": "string",
                      "description": "token pan number"
                    },
                    "card_expiry_mm": {
                      "type": "string",
                      "description": "token pan expiry month"
                    },
                    "card_expiry_yy": {
                      "type": "string",
                      "description": "token pan expiry year"
                    },
                    "cryptogram": {
                      "type": "string",
                      "description": "cryptogram"
                    },
                    "card_display": {
                      "type": "string",
                      "description": "last 4 digits of original card number"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-api-version": {
                "schema": {
                  "type": "string"
                }
              },
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-retry": {
                "schema": {
                  "type": "integer"
                }
              },
              "x-ratelimit-type": {
                "schema": {
                  "type": "string"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Any bad or invalid request will lead to following error object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorResponse",
                  "example": {
                    "message": "bad URL, please check API documentation",
                    "code": "request_failed",
                    "type": "invalid_request_error"
                  },
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "invalid_request_error",
                        "authentication_error",
                        "rate_limit_error",
                        "validation_error",
                        "api_error"
                      ],
                      "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "clientIdHeader": {
        "in": "header",
        "name": "x-client-id",
        "required": true,
        "schema": {
          "description": "Client app ID",
          "type": "string"
        }
      },
      "clientSecretHeader": {
        "in": "header",
        "name": "x-client-secret",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Client secret key"
        }
      },
      "apiVersionHeader": {
        "in": "header",
        "name": "x-api-version",
        "schema": {
          "type": "string",
          "description": "API version to be used",
          "default": "2022-01-01"
        }
      }
    },
    "schemas": {
      "AuthorizationRequest": {
        "title": "AuthorizationRequest",
        "example": {
          "action": "CAPTURE",
          "amount": 100
        },
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CAPTURE",
              "VOID"
            ],
            "description": "Type of authorization to run. Can be one of 'CAPTURE' , 'VOID'"
          },
          "amount": {
            "type": "number",
            "description": "The amount if you are running a 'CAPTURE'"
          }
        }
      },
      "OTPRequest": {
        "title": "OTPRequest",
        "type": "object",
        "required": [
          "otp",
          "operation"
        ],
        "properties": {
          "otp": {
            "type": "string",
            "description": "OTP to be submitted"
          },
          "operation": {
            "type": "string",
            "enum": [
              "SUBMIT_OTP",
              "RESEND_OTP"
            ],
            "description": "The operation for this workflow. Could be either SUBMIT_OTP or RESEND_OTP"
          }
        }
      },
      "FetchAllSavedInstruments": {
        "title": "FetchAllSavedInstruments",
        "example": {
          "customer_id": "siddhesh_desai",
          "afa_reference": 740324562,
          "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
          "instrument_type": "card",
          "instrument_uid": "0d8f70838cc5af8b1cd2bc0fe71278551fd3f1101e40020d89ad22ceba4f933c",
          "instrument_display": "xxxxxxxxxxxx4375",
          "instrument_status": "ACTIVE",
          "created_at": "2021-11-11 16:57:57",
          "instrument_meta": {
            "card_network": "VISA",
            "card_bank_name": "HDFC Bank Limited",
            "card_country": "IN",
            "card_type": "DEBIT_CARD",
            "card_token_details": null
          }
        },
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "customer_id for which the instrument was saved"
          },
          "afa_reference": {
            "type": "integer",
            "description": "cf_payment_id of the successful transaction done while saving instrument"
          },
          "instrument_id": {
            "type": "string",
            "description": "saved instrument id"
          },
          "instrument_type": {
            "type": "string",
            "enum": [
              "card"
            ],
            "description": "Type of the saved instrument"
          },
          "instrument_uid": {
            "type": "string",
            "description": "Unique id for the saved instrument"
          },
          "instrument_display": {
            "type": "string",
            "description": "masked card number displayed to the customer"
          },
          "instrument_status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "description": "status of the saved instrument"
          },
          "created_at": {
            "type": "string",
            "description": "timestamp at which instrument was saved"
          },
          "instrument_meta": {
            "title": "InstrumentMeta",
            "properties": {
              "card_network": {
                "type": "string",
                "description": "card scheme/network of the saved card"
              },
              "card_bank_name": {
                "type": "string",
                "description": "Issuing bank name of saved card"
              },
              "card_country": {
                "type": "string",
                "description": "Issuing country of saved card"
              },
              "card_type": {
                "type": "string",
                "description": "Type of saved card"
              },
              "card_token_details": {
                "type": "object"
              }
            }
          }
        }
      },
      "SavedInstrumentMeta": {
        "title": "InstrumentMeta",
        "properties": {
          "card_network": {
            "type": "string",
            "description": "card scheme/network of the saved card"
          },
          "card_bank_name": {
            "type": "string",
            "description": "Issuing bank name of saved card"
          },
          "card_country": {
            "type": "string",
            "description": "Issuing country of saved card"
          },
          "card_type": {
            "type": "string",
            "description": "Type of saved card"
          },
          "card_token_details": {
            "type": "object"
          }
        }
      },
      "Cryptogram": {
        "title": "FetchCryptogram",
        "example": {
          "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
          "token_requestor_id": "22457512314",
          "card_number": "4491365621601472",
          "card_expiry_mm": "06",
          "card_expiry_yy": "2025",
          "cryptogram": "AQBBBBBBZatIlaIAmWKSghwBBBB=",
          "card_display": "1234"
        },
        "properties": {
          "instrument_id": {
            "type": "string",
            "description": "instrument_id of saved instrument"
          },
          "token_requestor_id": {
            "type": "string",
            "description": "TRID issued by card networks"
          },
          "card_number": {
            "type": "string",
            "description": "token pan number"
          },
          "card_expiry_mm": {
            "type": "string",
            "description": "token pan expiry month"
          },
          "card_expiry_yy": {
            "type": "string",
            "description": "token pan expiry year"
          },
          "cryptogram": {
            "type": "string",
            "description": "cryptogram"
          },
          "card_display": {
            "type": "string",
            "description": "last 4 digits of original card number"
          }
        }
      },
      "CreateRefundRequest": {
        "title": "CreateRefundRequest",
        "example": {
          "refund_amount": 1,
          "refund_id": "refund_00912",
          "refund_note": "refund note for reference"
        },
        "type": "object",
        "properties": {
          "refund_amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be refunded. Should be lesser than or equal to the transaction amount. (Decimals allowed)"
          },
          "refund_id": {
            "type": "string",
            "description": "An unique ID to associate the refund with. Provie alphanumeric values",
            "minLength": 3,
            "maxLength": 40
          },
          "refund_note": {
            "type": "string",
            "description": "A refund note for your reference.",
            "minLength": 3,
            "maxLength": 100
          },
          "refund_splits": {
            "type": "array",
            "items": {
              "title": "VendorSplit",
              "type": "object",
              "example": {
                "vendor_id": "Vendor01",
                "amount": "100.1"
              },
              "properties": {
                "vendor_id": {
                  "type": "string",
                  "description": "Vendor id created in Cashfree system"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount which will be associated with this vendor"
                },
                "percentage": {
                  "type": "number",
                  "description": "Percentage of order amount which shall get added to vendor account"
                }
              }
            }
          }
        },
        "required": [
          "refund_amount",
          "refund_id"
        ]
      },
      "OrderPayRequest": {
        "title": "OrderPayRequest",
        "type": "object",
        "properties": {
          "order_token": {
            "type": "string",
            "example": "hyj120nbvt12831"
          },
          "payment_method": {
            "oneOf": [
              {
                "title": "CardPaymentMethod",
                "description": "The card payment object is used to make payment using either plain card number, saved card instrument id or using cryptogram ",
                "example": {
                  "card": {
                    "channel": "link",
                    "card_number": "4111111111111111",
                    "card_holder_name": "Tushar Gupta",
                    "card_expiry_mm": "06",
                    "card_expiry_yy": "22",
                    "card_cvv": "900"
                  }
                },
                "type": "object",
                "properties": {
                  "card": {
                    "title": "Card",
                    "example": {
                      "channel": "link",
                      "card_number": "4111111111111111",
                      "card_holder_name": "Tushar Gupta",
                      "card_expiry_mm": "06",
                      "card_expiry_yy": "22",
                      "card_cvv": "900"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "enum": [
                          "link",
                          "post"
                        ],
                        "description": "The channel for card payments can be \"link\" or \"post\". Post is used for seamless OTP payments where merchant captures OTP on their own page."
                      },
                      "card_number": {
                        "type": "string",
                        "description": "Customer card number for plain card transactions. Token pan number for tokenized card transactions."
                      },
                      "card_holder_name": {
                        "type": "string",
                        "description": "Customer name mentioned on the card."
                      },
                      "card_expiry_mm": {
                        "type": "string",
                        "description": "Card expiry month for plain card transactions. Token expiry month for tokenized card transactions."
                      },
                      "card_expiry_yy": {
                        "type": "string",
                        "description": "Card expiry year for plain card transactions. Token expiry year for tokenized card transactions."
                      },
                      "card_cvv": {
                        "type": "string",
                        "description": "CVV mentioned on the card."
                      },
                      "instrument_id": {
                        "type": "string",
                        "description": "instrument id of saved card. Required only to make payment using saved instrument."
                      },
                      "cryptogram": {
                        "type": "string",
                        "description": "cryptogram received from card network. Required only for tokenized card transactions."
                      },
                      "token_requestor_id": {
                        "type": "string",
                        "description": "TRID issued by card networks. Required only for tokenized card transactions."
                      },
                      "card_display": {
                        "type": "string",
                        "description": "last 4 digits of original card number. Required only for tokenized card transactions."
                      },
                      "card_alias": {
                        "type": "string",
                        "description": "Card alias as returned by Cashfree Vault API."
                      },
                      "card_bank_name": {
                        "type": "string",
                        "enum": [
                          "Kotak",
                          "ICICI",
                          "RBL",
                          "BOB",
                          "Standard Chartered"
                        ],
                        "description": "One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\"]. Card bank name, required for EMI payments. This is the bank user has selected for EMI"
                      },
                      "emi_tenure": {
                        "type": "integer",
                        "description": "EMI tenure selected by the user",
                        "required": [
                          "channel",
                          "card_number",
                          "card_expiry_mm",
                          "card_expiry_yy",
                          "card_cvv"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "card"
                ]
              },
              {
                "title": "UPIPaymentMethod",
                "example": {
                  "upi": {
                    "channel": "collect",
                    "upi_id": "rajnandan1@okhdfcbak"
                  }
                },
                "type": "object",
                "properties": {
                  "upi": {
                    "title": "Upi",
                    "example": {
                      "channel": "collect",
                      "upi_id": "rajnandan1@okhdfcbak",
                      "upi_expiry_minutes": 10
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "enum": [
                          "link",
                          "collect",
                          "qrcode"
                        ],
                        "description": "Specify the channel through which the payment must be processed. Can be one of [\"link\", \"collect\", \"qrcode\"]"
                      },
                      "upi_id": {
                        "type": "string",
                        "description": "Customer UPI VPA to process payment."
                      },
                      "upi_expiry_minutes": {
                        "type": "number",
                        "description": "The UPI request will be valid for this expiry minutes. This parameter is only applicable for a UPI collect payment. The default value is 5 minutes. You should keep the minimum as 5 minutes, and maximum as 15 minutes"
                      },
                      "authorize_only": {
                        "type": "boolean",
                        "description": "For one time mandate on UPI. Set this as authorize_only = true. Please note that you can only use the \"collect\" channel if you are sending a one time mandate request"
                      },
                      "authorization": {
                        "type": "object",
                        "title": "UPIAuthorizeDetails",
                        "example": {
                          "authorization": {
                            "approve_by": "2022-07-02T10:20:12+05:30",
                            "start_time": "2022-09-21T12:34:34Z",
                            "end_time": "2022-10-22T12:34:34Z"
                          }
                        },
                        "properties": {
                          "approve_by": {
                            "type": "string",
                            "description": "Time by which this authorization should be approved by the customer."
                          },
                          "start_time": {
                            "type": "string",
                            "description": "This is the time when the UPI one time mandate will start"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time."
                          }
                        }
                      }
                    },
                    "required": [
                      "channel"
                    ]
                  }
                },
                "required": [
                  "upi"
                ]
              },
              {
                "title": "NetBankingPaymentMethod",
                "example": {
                  "netbanking": {
                    "channel": "link",
                    "netbanking_bank_code": 3022
                  }
                },
                "type": "object",
                "properties": {
                  "netbanking": {
                    "title": "Netbanking",
                    "example": {
                      "channel": "link",
                      "netbanking_bank_code": 3022
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "The channel for netbanking will always be `link`"
                      },
                      "netbanking_bank_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Bank code"
                      }
                    },
                    "required": [
                      "channel",
                      "netbanking_bank_code"
                    ]
                  }
                },
                "required": [
                  "netbanking"
                ]
              },
              {
                "title": "AppPaymentMethod",
                "example": {
                  "app": {
                    "channel": "link",
                    "provider": "gpay",
                    "phone": "8474090552"
                  }
                },
                "type": "object",
                "properties": {
                  "app": {
                    "title": "App",
                    "example": {
                      "channel": "link",
                      "provider": "gpay",
                      "phone": "8474090552"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "Specify the channel through which the payment must be processed."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Customer phone number associated with a wallet for payment."
                      }
                    },
                    "required": [
                      "channel",
                      "phone"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              },
              {
                "title": "CardEMIPaymentMethod",
                "example": {
                  "emi": {
                    "channel": "link",
                    "card_number": "4111111111111111",
                    "card_holder_name": "Tushar Gupta",
                    "card_expiry_mm": "06",
                    "card_expiry_yy": "22",
                    "card_cvv": "900",
                    "card_bank_name": "Kotak",
                    "emi_tenure": 3
                  }
                },
                "type": "object",
                "properties": {
                  "emi": {
                    "title": "CardEMI",
                    "example": {
                      "channel": "link",
                      "card_number": "4111111111111111",
                      "card_holder_name": "Tushar Gupta",
                      "card_expiry_mm": "06",
                      "card_expiry_yy": "22",
                      "card_cvv": "900"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "The channel for card payments will always be \"link\""
                      },
                      "card_number": {
                        "type": "string",
                        "description": "Customer card number."
                      },
                      "card_holder_name": {
                        "type": "string",
                        "description": "Customer name mentioned on the card."
                      },
                      "card_expiry_mm": {
                        "type": "string",
                        "description": "Card expiry month."
                      },
                      "card_expiry_yy": {
                        "type": "string",
                        "description": "Card expiry year."
                      },
                      "card_cvv": {
                        "type": "string",
                        "description": "CVV mentioned on the card."
                      },
                      "card_alias": {
                        "type": "string",
                        "description": "Card alias as returned by Cashfree Vault API"
                      },
                      "card_bank_name": {
                        "type": "string",
                        "enum": [
                          "Kotak",
                          "ICICI",
                          "RBL",
                          "BOB",
                          "Standard Chartered",
                          "HDFC"
                        ],
                        "description": "Card bank name, required for EMI payments. This is the bank user has selected for EMI. One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\", \"HDFC\"]"
                      },
                      "emi_tenure": {
                        "type": "integer",
                        "description": "EMI tenure selected by the user",
                        "required": [
                          "channel",
                          "card_number",
                          "card_expiry_mm",
                          "card_expiry_yy",
                          "card_cvv",
                          "card_bank_name",
                          "emi_tenure"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "card"
                ]
              },
              {
                "title": "CardlessEMIPaymentMethod",
                "example": {
                  "channel": "link",
                  "provider": "flexmoney",
                  "phone": 781234121
                },
                "type": "object",
                "properties": {
                  "cardless_emi": {
                    "title": "CardlessEMI",
                    "example": {
                      "channel": "link",
                      "provider": "zestmoney",
                      "phone": 7768913241
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "The channel for cardless EMI is always `link`"
                      },
                      "provider": {
                        "type": "string",
                        "enum": [
                          "flexmoney",
                          "zestmoney"
                        ],
                        "description": "One of [\"flexmoney\", \"zestmoney\"]"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
                      }
                    }
                  }
                },
                "required": [
                  "cardless_emi"
                ]
              },
              {
                "title": "PaylaterPaymentMethod",
                "example": {
                  "channel": "link",
                  "provider": "lazypay",
                  "phone": 781234121
                },
                "type": "object",
                "properties": {
                  "paylater": {
                    "title": "Paylater",
                    "example": {
                      "channel": "link",
                      "provider": "kotak",
                      "phone": 7789112345
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "The channel for cardless EMI is always `link`"
                      },
                      "provider": {
                        "type": "string",
                        "enum": [
                          "kotak",
                          "flexipay",
                          "zestmoney",
                          "lazypay",
                          "olapostpaid"
                        ],
                        "description": "One of [\"kotak\", \"flexipay\", \"zestmoney\", \"lazypay\", \"olapostpaid\"]. Please note that Flexipay is offered by HDFC bank"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
                      }
                    }
                  }
                },
                "required": [
                  "paylater"
                ]
              }
            ]
          },
          "save_instrument": {
            "type": "boolean"
          }
        },
        "required": [
          "order_token",
          "payment_method"
        ]
      },
      "UPIPaymentMethod": {
        "title": "UPIPaymentMethod",
        "example": {
          "upi": {
            "channel": "collect",
            "upi_id": "rajnandan1@okhdfcbak"
          }
        },
        "type": "object",
        "properties": {
          "upi": {
            "title": "Upi",
            "example": {
              "channel": "collect",
              "upi_id": "rajnandan1@okhdfcbak",
              "upi_expiry_minutes": 10
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "enum": [
                  "link",
                  "collect",
                  "qrcode"
                ],
                "description": "Specify the channel through which the payment must be processed. Can be one of [\"link\", \"collect\", \"qrcode\"]"
              },
              "upi_id": {
                "type": "string",
                "description": "Customer UPI VPA to process payment."
              },
              "upi_expiry_minutes": {
                "type": "number",
                "description": "The UPI request will be valid for this expiry minutes. This parameter is only applicable for a UPI collect payment. The default value is 5 minutes. You should keep the minimum as 5 minutes, and maximum as 15 minutes"
              },
              "authorize_only": {
                "type": "boolean",
                "description": "For one time mandate on UPI. Set this as authorize_only = true. Please note that you can only use the \"collect\" channel if you are sending a one time mandate request"
              },
              "authorization": {
                "type": "object",
                "title": "UPIAuthorizeDetails",
                "example": {
                  "authorization": {
                    "approve_by": "2022-07-02T10:20:12+05:30",
                    "start_time": "2022-09-21T12:34:34Z",
                    "end_time": "2022-10-22T12:34:34Z"
                  }
                },
                "properties": {
                  "approve_by": {
                    "type": "string",
                    "description": "Time by which this authorization should be approved by the customer."
                  },
                  "start_time": {
                    "type": "string",
                    "description": "This is the time when the UPI one time mandate will start"
                  },
                  "end_time": {
                    "type": "string",
                    "description": "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time."
                  }
                }
              }
            },
            "required": [
              "channel"
            ]
          }
        },
        "required": [
          "upi"
        ]
      },
      "Upi": {
        "title": "Upi",
        "example": {
          "channel": "collect",
          "upi_id": "rajnandan1@okhdfcbak",
          "upi_expiry_minutes": 10
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "enum": [
              "link",
              "collect",
              "qrcode"
            ],
            "description": "Specify the channel through which the payment must be processed. Can be one of [\"link\", \"collect\", \"qrcode\"]"
          },
          "upi_id": {
            "type": "string",
            "description": "Customer UPI VPA to process payment."
          },
          "upi_expiry_minutes": {
            "type": "number",
            "description": "The UPI request will be valid for this expiry minutes. This parameter is only applicable for a UPI collect payment. The default value is 5 minutes. You should keep the minimum as 5 minutes, and maximum as 15 minutes"
          },
          "authorize_only": {
            "type": "boolean",
            "description": "For one time mandate on UPI. Set this as authorize_only = true. Please note that you can only use the \"collect\" channel if you are sending a one time mandate request"
          },
          "authorization": {
            "type": "object",
            "title": "UPIAuthorizeDetails",
            "example": {
              "authorization": {
                "approve_by": "2022-07-02T10:20:12+05:30",
                "start_time": "2022-09-21T12:34:34Z",
                "end_time": "2022-10-22T12:34:34Z"
              }
            },
            "properties": {
              "approve_by": {
                "type": "string",
                "description": "Time by which this authorization should be approved by the customer."
              },
              "start_time": {
                "type": "string",
                "description": "This is the time when the UPI one time mandate will start"
              },
              "end_time": {
                "type": "string",
                "description": "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time."
              }
            }
          }
        },
        "required": [
          "channel"
        ]
      },
      "UPIAuthorizeDetails": {
        "title": "UPIAuthorizeDetails",
        "example": {
          "authorization": {
            "approve_by": "2022-07-02T10:20:12+05:30",
            "start_time": "2022-09-21T12:34:34Z",
            "end_time": "2022-10-22T12:34:34Z"
          }
        },
        "type": "object",
        "properties": {
          "approve_by": {
            "type": "string",
            "description": "Time by which this authorization should be approved by the customer."
          },
          "start_time": {
            "type": "string",
            "description": "This is the time when the UPI one time mandate will start"
          },
          "end_time": {
            "type": "string",
            "description": "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time."
          }
        }
      },
      "AppPaymentMethod": {
        "title": "AppPaymentMethod",
        "example": {
          "app": {
            "channel": "link",
            "provider": "gpay",
            "phone": "8474090552"
          }
        },
        "type": "object",
        "properties": {
          "app": {
            "title": "App",
            "example": {
              "channel": "link",
              "provider": "gpay",
              "phone": "8474090552"
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Specify the channel through which the payment must be processed."
              },
              "phone": {
                "type": "string",
                "description": "Customer phone number associated with a wallet for payment."
              }
            },
            "required": [
              "channel",
              "phone"
            ]
          }
        },
        "required": [
          "app"
        ]
      },
      "App": {
        "title": "App",
        "example": {
          "channel": "link",
          "provider": "gpay",
          "phone": "8474090552"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Specify the channel through which the payment must be processed."
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number associated with a wallet for payment."
          }
        },
        "required": [
          "channel",
          "phone"
        ]
      },
      "NetBankingPaymentMethod": {
        "title": "NetBankingPaymentMethod",
        "example": {
          "netbanking": {
            "channel": "link",
            "netbanking_bank_code": 3022
          }
        },
        "type": "object",
        "properties": {
          "netbanking": {
            "title": "Netbanking",
            "example": {
              "channel": "link",
              "netbanking_bank_code": 3022
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel for netbanking will always be `link`"
              },
              "netbanking_bank_code": {
                "type": "integer",
                "format": "int32",
                "description": "Bank code"
              }
            },
            "required": [
              "channel",
              "netbanking_bank_code"
            ]
          }
        },
        "required": [
          "netbanking"
        ]
      },
      "Netbanking": {
        "title": "Netbanking",
        "example": {
          "channel": "link",
          "netbanking_bank_code": 3022
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "The channel for netbanking will always be `link`"
          },
          "netbanking_bank_code": {
            "type": "integer",
            "format": "int32",
            "description": "Bank code"
          }
        },
        "required": [
          "channel",
          "netbanking_bank_code"
        ]
      },
      "CardlessEMIPaymentMethod": {
        "title": "CardlessEMIPaymentMethod",
        "example": {
          "channel": "link",
          "provider": "flexmoney",
          "phone": 781234121
        },
        "type": "object",
        "properties": {
          "cardless_emi": {
            "title": "CardlessEMI",
            "example": {
              "channel": "link",
              "provider": "zestmoney",
              "phone": 7768913241
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel for cardless EMI is always `link`"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "flexmoney",
                  "zestmoney"
                ],
                "description": "One of [\"flexmoney\", \"zestmoney\"]"
              },
              "phone": {
                "type": "string",
                "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
              }
            }
          }
        },
        "required": [
          "cardless_emi"
        ]
      },
      "CardlessEMI": {
        "title": "CardlessEMI",
        "example": {
          "channel": "link",
          "provider": "zestmoney",
          "phone": 7768913241
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "The channel for cardless EMI is always `link`"
          },
          "provider": {
            "type": "string",
            "enum": [
              "flexmoney",
              "zestmoney"
            ],
            "description": "One of [\"flexmoney\", \"zestmoney\"]"
          },
          "phone": {
            "type": "string",
            "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
          }
        }
      },
      "PaylaterPaymentMethod": {
        "title": "PaylaterPaymentMethod",
        "example": {
          "channel": "link",
          "provider": "lazypay",
          "phone": 781234121
        },
        "type": "object",
        "properties": {
          "paylater": {
            "title": "Paylater",
            "example": {
              "channel": "link",
              "provider": "kotak",
              "phone": 7789112345
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel for cardless EMI is always `link`"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "kotak",
                  "flexipay",
                  "zestmoney",
                  "lazypay",
                  "olapostpaid"
                ],
                "description": "One of [\"kotak\", \"flexipay\", \"zestmoney\", \"lazypay\", \"olapostpaid\"]. Please note that Flexipay is offered by HDFC bank"
              },
              "phone": {
                "type": "string",
                "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
              }
            }
          }
        },
        "required": [
          "paylater"
        ]
      },
      "Paylater": {
        "title": "Paylater",
        "example": {
          "channel": "link",
          "provider": "kotak",
          "phone": 7789112345
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "The channel for cardless EMI is always `link`"
          },
          "provider": {
            "type": "string",
            "enum": [
              "kotak",
              "flexipay",
              "zestmoney",
              "lazypay",
              "olapostpaid"
            ],
            "description": "One of [\"kotak\", \"flexipay\", \"zestmoney\", \"lazypay\", \"olapostpaid\"]. Please note that Flexipay is offered by HDFC bank"
          },
          "phone": {
            "type": "string",
            "description": "Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'"
          }
        }
      },
      "CardPaymentMethod": {
        "title": "CardPaymentMethod",
        "description": "The card payment object is used to make payment using either plain card number, saved card instrument id or using cryptogram ",
        "example": {
          "card": {
            "channel": "link",
            "card_number": "4111111111111111",
            "card_holder_name": "Tushar Gupta",
            "card_expiry_mm": "06",
            "card_expiry_yy": "22",
            "card_cvv": "900"
          }
        },
        "type": "object",
        "properties": {
          "card": {
            "title": "Card",
            "example": {
              "channel": "link",
              "card_number": "4111111111111111",
              "card_holder_name": "Tushar Gupta",
              "card_expiry_mm": "06",
              "card_expiry_yy": "22",
              "card_cvv": "900"
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "enum": [
                  "link",
                  "post"
                ],
                "description": "The channel for card payments can be \"link\" or \"post\". Post is used for seamless OTP payments where merchant captures OTP on their own page."
              },
              "card_number": {
                "type": "string",
                "description": "Customer card number for plain card transactions. Token pan number for tokenized card transactions."
              },
              "card_holder_name": {
                "type": "string",
                "description": "Customer name mentioned on the card."
              },
              "card_expiry_mm": {
                "type": "string",
                "description": "Card expiry month for plain card transactions. Token expiry month for tokenized card transactions."
              },
              "card_expiry_yy": {
                "type": "string",
                "description": "Card expiry year for plain card transactions. Token expiry year for tokenized card transactions."
              },
              "card_cvv": {
                "type": "string",
                "description": "CVV mentioned on the card."
              },
              "instrument_id": {
                "type": "string",
                "description": "instrument id of saved card. Required only to make payment using saved instrument."
              },
              "cryptogram": {
                "type": "string",
                "description": "cryptogram received from card network. Required only for tokenized card transactions."
              },
              "token_requestor_id": {
                "type": "string",
                "description": "TRID issued by card networks. Required only for tokenized card transactions."
              },
              "card_display": {
                "type": "string",
                "description": "last 4 digits of original card number. Required only for tokenized card transactions."
              },
              "card_alias": {
                "type": "string",
                "description": "Card alias as returned by Cashfree Vault API."
              },
              "card_bank_name": {
                "type": "string",
                "enum": [
                  "Kotak",
                  "ICICI",
                  "RBL",
                  "BOB",
                  "Standard Chartered"
                ],
                "description": "One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\"]. Card bank name, required for EMI payments. This is the bank user has selected for EMI"
              },
              "emi_tenure": {
                "type": "integer",
                "description": "EMI tenure selected by the user",
                "required": [
                  "channel",
                  "card_number",
                  "card_expiry_mm",
                  "card_expiry_yy",
                  "card_cvv"
                ]
              }
            }
          }
        },
        "required": [
          "card"
        ]
      },
      "CardEMIPaymentMethod": {
        "title": "CardEMIPaymentMethod",
        "example": {
          "emi": {
            "channel": "link",
            "card_number": "4111111111111111",
            "card_holder_name": "Tushar Gupta",
            "card_expiry_mm": "06",
            "card_expiry_yy": "22",
            "card_cvv": "900",
            "card_bank_name": "Kotak",
            "emi_tenure": 3
          }
        },
        "type": "object",
        "properties": {
          "emi": {
            "title": "CardEMI",
            "example": {
              "channel": "link",
              "card_number": "4111111111111111",
              "card_holder_name": "Tushar Gupta",
              "card_expiry_mm": "06",
              "card_expiry_yy": "22",
              "card_cvv": "900"
            },
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel for card payments will always be \"link\""
              },
              "card_number": {
                "type": "string",
                "description": "Customer card number."
              },
              "card_holder_name": {
                "type": "string",
                "description": "Customer name mentioned on the card."
              },
              "card_expiry_mm": {
                "type": "string",
                "description": "Card expiry month."
              },
              "card_expiry_yy": {
                "type": "string",
                "description": "Card expiry year."
              },
              "card_cvv": {
                "type": "string",
                "description": "CVV mentioned on the card."
              },
              "card_alias": {
                "type": "string",
                "description": "Card alias as returned by Cashfree Vault API"
              },
              "card_bank_name": {
                "type": "string",
                "enum": [
                  "Kotak",
                  "ICICI",
                  "RBL",
                  "BOB",
                  "Standard Chartered",
                  "HDFC"
                ],
                "description": "Card bank name, required for EMI payments. This is the bank user has selected for EMI. One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\", \"HDFC\"]"
              },
              "emi_tenure": {
                "type": "integer",
                "description": "EMI tenure selected by the user",
                "required": [
                  "channel",
                  "card_number",
                  "card_expiry_mm",
                  "card_expiry_yy",
                  "card_cvv",
                  "card_bank_name",
                  "emi_tenure"
                ]
              }
            }
          }
        },
        "required": [
          "card"
        ]
      },
      "CardEMI": {
        "title": "CardEMI",
        "example": {
          "channel": "link",
          "card_number": "4111111111111111",
          "card_holder_name": "Tushar Gupta",
          "card_expiry_mm": "06",
          "card_expiry_yy": "22",
          "card_cvv": "900"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "The channel for card payments will always be \"link\""
          },
          "card_number": {
            "type": "string",
            "description": "Customer card number."
          },
          "card_holder_name": {
            "type": "string",
            "description": "Customer name mentioned on the card."
          },
          "card_expiry_mm": {
            "type": "string",
            "description": "Card expiry month."
          },
          "card_expiry_yy": {
            "type": "string",
            "description": "Card expiry year."
          },
          "card_cvv": {
            "type": "string",
            "description": "CVV mentioned on the card."
          },
          "card_alias": {
            "type": "string",
            "description": "Card alias as returned by Cashfree Vault API"
          },
          "card_bank_name": {
            "type": "string",
            "enum": [
              "Kotak",
              "ICICI",
              "RBL",
              "BOB",
              "Standard Chartered",
              "HDFC"
            ],
            "description": "Card bank name, required for EMI payments. This is the bank user has selected for EMI. One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\", \"HDFC\"]"
          },
          "emi_tenure": {
            "type": "integer",
            "description": "EMI tenure selected by the user",
            "required": [
              "channel",
              "card_number",
              "card_expiry_mm",
              "card_expiry_yy",
              "card_cvv",
              "card_bank_name",
              "emi_tenure"
            ]
          }
        }
      },
      "Card": {
        "title": "Card",
        "example": {
          "channel": "link",
          "card_number": "4111111111111111",
          "card_holder_name": "Tushar Gupta",
          "card_expiry_mm": "06",
          "card_expiry_yy": "22",
          "card_cvv": "900"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "enum": [
              "link",
              "post"
            ],
            "description": "The channel for card payments can be \"link\" or \"post\". Post is used for seamless OTP payments where merchant captures OTP on their own page."
          },
          "card_number": {
            "type": "string",
            "description": "Customer card number for plain card transactions. Token pan number for tokenized card transactions."
          },
          "card_holder_name": {
            "type": "string",
            "description": "Customer name mentioned on the card."
          },
          "card_expiry_mm": {
            "type": "string",
            "description": "Card expiry month for plain card transactions. Token expiry month for tokenized card transactions."
          },
          "card_expiry_yy": {
            "type": "string",
            "description": "Card expiry year for plain card transactions. Token expiry year for tokenized card transactions."
          },
          "card_cvv": {
            "type": "string",
            "description": "CVV mentioned on the card."
          },
          "instrument_id": {
            "type": "string",
            "description": "instrument id of saved card. Required only to make payment using saved instrument."
          },
          "cryptogram": {
            "type": "string",
            "description": "cryptogram received from card network. Required only for tokenized card transactions."
          },
          "token_requestor_id": {
            "type": "string",
            "description": "TRID issued by card networks. Required only for tokenized card transactions."
          },
          "card_display": {
            "type": "string",
            "description": "last 4 digits of original card number. Required only for tokenized card transactions."
          },
          "card_alias": {
            "type": "string",
            "description": "Card alias as returned by Cashfree Vault API."
          },
          "card_bank_name": {
            "type": "string",
            "enum": [
              "Kotak",
              "ICICI",
              "RBL",
              "BOB",
              "Standard Chartered"
            ],
            "description": "One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\"]. Card bank name, required for EMI payments. This is the bank user has selected for EMI"
          },
          "emi_tenure": {
            "type": "integer",
            "description": "EMI tenure selected by the user",
            "required": [
              "channel",
              "card_number",
              "card_expiry_mm",
              "card_expiry_yy",
              "card_cvv"
            ]
          }
        }
      },
      "OrderPayResponse": {
        "title": "OrderPayResponse",
        "type": "object",
        "example": {
          "payment_method": "card",
          "channel": "link",
          "action": "link",
          "cf_payment_id": 91235,
          "data": {
            "url": "https://sandbox.cashfree.com/pg/view/gateway/FHsuvhayLM5mmhINoqri7ba296e2ebca8b98e6119f6223021a13",
            "payload": null,
            "content_type": null,
            "method": null
          }
        },
        "properties": {
          "cf_payment_id": {
            "type": "integer",
            "description": "Payment identifier created by Cashfree"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "netbanking",
              "card",
              "upi",
              "app",
              "cardless_emi",
              "paylater"
            ],
            "description": "One of [\"upi\", \"netbanking\", \"card\", \"app\", \"cardless_emi\", \"paylater\"] "
          },
          "channel": {
            "type": "string",
            "enum": [
              "link",
              "collect",
              "qrcode"
            ],
            "description": "One of [\"link\", \"collect\", \"qrcode\"]. In an older version we used to support different channels like 'gpay', 'phonepe' etc. However, we now support only the following channels - link, collect and qrcode. To process payments using gpay, you will have to provide channel as 'link' and provider as 'gpay'"
          },
          "action": {
            "type": "string",
            "enum": [
              "link",
              "custom",
              "form"
            ],
            "description": "One of [\"link\", \"custom\", \"form\"]",
            "nullable": true
          },
          "data": {
            "title": "OrderPayData",
            "type": "object",
            "example": {
              "url": "https://hdfcbank.com/sendTo/897?q",
              "payload": {
                "MD": 89811231231,
                "PaReq": "89123l1j2l3j1ljkkl="
              },
              "content_type": "application/x-www-form-encoded",
              "method": "post"
            },
            "properties": {
              "url": {
                "type": "string",
                "nullable": true
              },
              "payload": {
                "nullable": true,
                "type": "object"
              },
              "content_type": {
                "type": "string"
              },
              "method": {
                "type": "string"
              }
            }
          }
        }
      },
      "OrderPayData": {
        "title": "OrderPayData",
        "type": "object",
        "example": {
          "url": "https://hdfcbank.com/sendTo/897?q",
          "payload": {
            "MD": 89811231231,
            "PaReq": "89123l1j2l3j1ljkkl="
          },
          "content_type": "application/x-www-form-encoded",
          "method": "post"
        },
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "nullable": true,
            "type": "object"
          },
          "content_type": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        }
      },
      "CreateOrderBackendRequest": {
        "title": "CreateOrderBackendRequest",
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "Order identifier present in your system. Alphanumeric and only - and _ allowed.",
            "minLength": 3,
            "maxLength": 45
          },
          "order_amount": {
            "type": "number",
            "description": "Bill amount for the order. Provide upto two decimals. 10.15 means Rs 10 and 15 paisa",
            "format": "double",
            "example": 10.15
          },
          "order_currency": {
            "type": "string",
            "description": "Currency for the order. INR if left empty. Contact care@cashfree.com to enable new currencies. ",
            "example": "INR"
          },
          "customer_details": {
            "title": "CustomerDetails",
            "example": {
              "customer_id": "7112AAA812234",
              "customer_email": "john@cashfree.com",
              "customer_phone": "9908734801",
              "customer_bank_account_number": "1518121112",
              "customer_bank_ifsc": "CITI0000001",
              "customer_bank_code": 3333
            },
            "type": "object",
            "properties": {
              "customer_id": {
                "type": "string",
                "description": "A unique identifier for the customer. Use alphanumeric values only.",
                "minLength": 3,
                "maxLength": 50
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address.",
                "minLength": 3,
                "maxLength": 100
              },
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number.",
                "minLength": 10,
                "maxLength": 10
              },
              "customer_bank_account_number": {
                "type": "string",
                "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
                "minLength": 3,
                "maxLength": 20
              },
              "customer_bank_ifsc": {
                "type": "string",
                "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
              },
              "customer_bank_code": {
                "type": "string",
                "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
              }
            },
            "required": [
              "customer_id",
              "customer_email",
              "customer_phone"
            ]
          },
          "order_meta": {
            "title": "OrderMeta",
            "example": {
              "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
              "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
            },
            "type": "object",
            "properties": {
              "return_url": {
                "type": "string",
                "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
              },
              "notify_url": {
                "type": "string",
                "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
              },
              "payment_methods": {
                "type": "string",
                "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
              }
            }
          },
          "order_expiry_time": {
            "type": "string",
            "description": "Time after which the order expires. Customers will not be able to make the payment beyond the time specified here. We store timestamps in IST, but you can provide them in a valid ISO 8601 time format.",
            "example": "2021-07-29T00:00:00Z"
          },
          "order_note": {
            "type": "string",
            "description": "Order note for reference.",
            "example": "Test order",
            "minLength": 3,
            "maxLength": 200
          },
          "order_tags": {
            "type": "object",
            "description": "Custom Tags which can be passed for an order. A maximum of 6 tags can be added",
            "additionalProperties": {
              "type": "string",
              "minLength": 3,
              "maxLength": 255
            }
          },
          "order_splits": {
            "type": "array",
            "items": {
              "title": "VendorSplit",
              "type": "object",
              "example": {
                "vendor_id": "Vendor01",
                "amount": "100.1"
              },
              "properties": {
                "vendor_id": {
                  "type": "string",
                  "description": "Vendor id created in Cashfree system"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount which will be associated with this vendor"
                },
                "percentage": {
                  "type": "number",
                  "description": "Percentage of order amount which shall get added to vendor account"
                }
              }
            }
          }
        },
        "required": [
          "order_amount",
          "order_currency",
          "customer_details"
        ]
      },
      "VendorSplit": {
        "title": "VendorSplit",
        "type": "object",
        "example": {
          "vendor_id": "Vendor01",
          "amount": "100.1"
        },
        "properties": {
          "vendor_id": {
            "type": "string",
            "description": "Vendor id created in Cashfree system"
          },
          "amount": {
            "type": "number",
            "description": "Amount which will be associated with this vendor"
          },
          "percentage": {
            "type": "number",
            "description": "Percentage of order amount which shall get added to vendor account"
          }
        }
      },
      "CustomerDetails": {
        "title": "CustomerDetails",
        "example": {
          "customer_id": "7112AAA812234",
          "customer_email": "john@cashfree.com",
          "customer_phone": "9908734801",
          "customer_bank_account_number": "1518121112",
          "customer_bank_ifsc": "CITI0000001",
          "customer_bank_code": 3333
        },
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "A unique identifier for the customer. Use alphanumeric values only.",
            "minLength": 3,
            "maxLength": 50
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email address.",
            "minLength": 3,
            "maxLength": 100
          },
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number.",
            "minLength": 10,
            "maxLength": 10
          },
          "customer_bank_account_number": {
            "type": "string",
            "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
            "minLength": 3,
            "maxLength": 20
          },
          "customer_bank_ifsc": {
            "type": "string",
            "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
          },
          "customer_bank_code": {
            "type": "string",
            "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
          }
        },
        "required": [
          "customer_id",
          "customer_email",
          "customer_phone"
        ]
      },
      "OrderMeta": {
        "title": "OrderMeta",
        "example": {
          "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
          "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
        },
        "type": "object",
        "properties": {
          "return_url": {
            "type": "string",
            "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
          },
          "notify_url": {
            "type": "string",
            "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
          },
          "payment_methods": {
            "type": "string",
            "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
          }
        }
      },
      "SettlementURLObject": {
        "title": "SettlementURLObject",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
          }
        }
      },
      "RefundURLObject": {
        "title": "RefundURLObject",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
          }
        }
      },
      "PaymentURLObject": {
        "title": "PaymentURLObject",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
          }
        }
      },
      "OrdersEntity": {
        "title": "OrdersEntity",
        "type": "object",
        "example": {
          "cf_order_id": 1553338,
          "order_id": "order_271vovQ3PTZAx3fDI0",
          "entity": "order",
          "order_currency": "INR",
          "order_amount": 10.12,
          "order_status": "ACTIVE",
          "order_token": "79byj5123g6912mki3",
          "order_note": "order #145",
          "order_expiry_time": "2021-07-29T05:30:00+05:30",
          "payment_link": "https://payments-test.cashfree.com/order#123bhd816dfb1"
        },
        "properties": {
          "cf_order_id": {
            "type": "integer"
          },
          "order_id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "order_currency": {
            "type": "string"
          },
          "order_amount": {
            "type": "number"
          },
          "order_status": {
            "type": "string"
          },
          "order_token": {
            "type": "string"
          },
          "order_expiry_time": {
            "type": "string"
          },
          "order_note": {
            "type": "string"
          },
          "payment_link": {
            "type": "string"
          },
          "customer_details": {
            "title": "CustomerDetails",
            "example": {
              "customer_id": "7112AAA812234",
              "customer_email": "john@cashfree.com",
              "customer_phone": "9908734801",
              "customer_bank_account_number": "1518121112",
              "customer_bank_ifsc": "CITI0000001",
              "customer_bank_code": 3333
            },
            "type": "object",
            "properties": {
              "customer_id": {
                "type": "string",
                "description": "A unique identifier for the customer. Use alphanumeric values only.",
                "minLength": 3,
                "maxLength": 50
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address.",
                "minLength": 3,
                "maxLength": 100
              },
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number.",
                "minLength": 10,
                "maxLength": 10
              },
              "customer_bank_account_number": {
                "type": "string",
                "description": "Customer bank account. Required if you want to do a bank account check (TPV)",
                "minLength": 3,
                "maxLength": 20
              },
              "customer_bank_ifsc": {
                "type": "string",
                "description": "Customer bank IFSC. Required if you want to do a bank account check (TPV)"
              },
              "customer_bank_code": {
                "type": "string",
                "description": "Customer bank code. Required for net banking payments, if you want to do a bank account check (TPV)"
              }
            },
            "required": [
              "customer_id",
              "customer_email",
              "customer_phone"
            ]
          },
          "order_meta": {
            "title": "OrderMeta",
            "example": {
              "return_url": "https://b8af79f41056.eu.ngrok.io?order_id={order_id}&order_token={order_token}",
              "notify_url": "https://b8af79f41056.eu.ngrok.io/webhook.php"
            },
            "type": "object",
            "properties": {
              "return_url": {
                "type": "string",
                "description": "The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250."
              },
              "notify_url": {
                "type": "string",
                "description": "Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250."
              },
              "payment_methods": {
                "type": "string",
                "description": "Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
              }
            }
          },
          "payments": {
            "title": "PaymentURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
              }
            }
          },
          "settlements": {
            "title": "SettlementURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
              }
            }
          },
          "refunds": {
            "title": "RefundURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
              }
            }
          }
        }
      },
      "RefundsEntity": {
        "title": "RefundsEntity",
        "type": "object",
        "example": {
          "cf_payment_id": 918812,
          "cf_refund_id": "refund_1553338",
          "refund_id": "REF-123",
          "order_id": "c6G-QMcbm1848",
          "entity": "refund",
          "refund_amount": 100.81,
          "refund_currency": "INR",
          "refund_note": "Refund for order #123",
          "refund_status": "SUCCESS",
          "refund_type": "MERCHANT_INITIATED",
          "refund_splits": [],
          "status_description": "In Progress",
          "refund_arn": "RF12312",
          "metadata": null,
          "created_at": "2021-07-25T08:57:52+05:30",
          "processed_at": "2021-07-25T12:57:52+05:30",
          "refund_charge": 0,
          "refund_mode": "STANDARD"
        },
        "properties": {
          "cf_payment_id": {
            "type": "integer",
            "description": "Cashfree Payments ID of the payment for which refund is initiated"
          },
          "cf_refund_id": {
            "type": "string",
            "description": "Cashfree Payments ID for a refund"
          },
          "order_id": {
            "type": "string",
            "description": "Merchant’s order Id of the order for which refund is initiated"
          },
          "refund_id": {
            "type": "string",
            "description": "Merchant’s refund ID of the refund"
          },
          "entity": {
            "type": "string",
            "enum": [
              "refund"
            ],
            "description": "Type of object"
          },
          "refund_amount": {
            "type": "number",
            "description": "Amount that is refunded"
          },
          "refund_currency": {
            "type": "string",
            "description": "Currency of the refund amount"
          },
          "refund_note": {
            "type": "string",
            "description": "Note added by merchant for the refund"
          },
          "refund_status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "PENDING",
              "CANCELLED",
              "ONHOLD"
            ],
            "description": "This can be one of [\"SUCCESS\", \"PENDING\", \"CANCELLED\", \"ONHOLD\"]"
          },
          "refund_arn": {
            "type": "string",
            "description": "The bank reference number for refund"
          },
          "refund_charge": {
            "type": "number",
            "description": "Charges in INR for processing refund"
          },
          "status_description": {
            "type": "string",
            "description": "Description of refund status"
          },
          "metadata": {
            "type": "object",
            "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs"
          },
          "refund_splits": {
            "type": "array",
            "items": {
              "title": "VendorSplit",
              "type": "object",
              "example": {
                "vendor_id": "Vendor01",
                "amount": "100.1"
              },
              "properties": {
                "vendor_id": {
                  "type": "string",
                  "description": "Vendor id created in Cashfree system"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount which will be associated with this vendor"
                },
                "percentage": {
                  "type": "number",
                  "description": "Percentage of order amount which shall get added to vendor account"
                }
              },
              "description": "Refund split details"
            }
          },
          "refund_type": {
            "type": "string",
            "enum": [
              "PAYMENT_AUTO_REFUND",
              "MERCHANT_INITIATED",
              "UNRECONCILED_AUTO_REFUND"
            ],
            "description": "This can be one of [\"PAYMENT_AUTO_REFUND\", \"MERCHANT_INITIATED\", \"UNRECONCILED_AUTO_REFUND\"]"
          },
          "refund_mode": {
            "type": "string",
            "enum": [
              "STANDARD",
              "INSTANT"
            ],
            "description": "Method or speed of processing refund"
          },
          "created_at": {
            "type": "string",
            "description": "Time of refund creation"
          },
          "processed_at": {
            "type": "string",
            "description": "Time when refund was processed successfully"
          }
        }
      },
      "SettlementsEntity": {
        "title": "SettlementsEntity",
        "type": "object",
        "example": {
          "cf_payment_id": 553338,
          "order_id": "order-12-127",
          "entity": "settlement",
          "order_amount": 100,
          "payment_time": "2021-07-13T13:13:59+05:30",
          "service_charge": 10,
          "service_tax": 1.8,
          "settlement_amount": 88.2,
          "cf_settlement_id": 6121238,
          "transfer_id": 238,
          "transfer_time": "2021-07-25T12:57:52+05:30",
          "transfer_utr": "N87912312",
          "order_currency": "INR",
          "settlement_currency": "INR"
        },
        "properties": {
          "cf_payment_id": {
            "type": "string"
          },
          "cf_settlement_id": {
            "type": "string"
          },
          "settlement_currency": {
            "type": "string"
          },
          "order_id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "order_amount": {
            "type": "number"
          },
          "payment_time": {
            "type": "string"
          },
          "service_charge": {
            "type": "number"
          },
          "service_tax": {
            "type": "number"
          },
          "settlement_amount": {
            "type": "number"
          },
          "settlement_id": {
            "type": "integer"
          },
          "transfer_id": {
            "type": "integer"
          },
          "transfer_time": {
            "type": "string"
          },
          "transfer_utr": {
            "type": "string"
          }
        }
      },
      "PaymentsEntity": {
        "title": "PaymentsEntity",
        "type": "object",
        "example": {
          "cf_payment_id": 12376123,
          "order_id": "order_8123",
          "entity": "payment",
          "payment_currency": "INR",
          "order_amount": 10.01,
          "is_captured": true,
          "payment_group": "upi",
          "authorization": null,
          "payment_method": {
            "upi": {
              "channel": "collect",
              "upi_id": "rohit@icici"
            }
          },
          "payment_amount": 10.01,
          "payment_time": "2021-07-23T12:15:06+05:30",
          "payment_completion_time": "2021-07-23T12:18:59+05:30",
          "payment_status": "SUCCESS",
          "payment_message": "Transaction successful",
          "bank_reference": "P78112898712",
          "auth_id": "A898101"
        },
        "properties": {
          "cf_payment_id": {
            "type": "integer"
          },
          "order_id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "is_captured": {
            "type": "boolean"
          },
          "order_amount": {
            "type": "number",
            "description": "Order amount can be different from payment amount if you collect service fee from the customer"
          },
          "payment_group": {
            "type": "string",
            "description": "Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']"
          },
          "payment_currency": {
            "type": "string"
          },
          "payment_amount": {
            "type": "number"
          },
          "payment_time": {
            "type": "string",
            "description": "This is the time when the payment was initiated"
          },
          "payment_completion_time": {
            "type": "string",
            "description": "This is the time when the payment reaches its terminal state"
          },
          "payment_status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "NOT_ATTEMPTED",
              "FAILED",
              "USER_DROPPED",
              "VOID",
              "CANCELLED",
              "PENDING"
            ],
            "description": "The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]"
          },
          "payment_message": {
            "type": "string"
          },
          "bank_reference": {
            "type": "string"
          },
          "auth_id": {
            "type": "string"
          },
          "authorization": {
            "title": "AuthorizationInPayments",
            "description": "The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.",
            "example": {
              "action": "CAPTURE",
              "status": "PENDING",
              "captured_amount": 100,
              "start_time": "2022-02-09T18:04:34+05:30",
              "end_time": "2022-02-19T18:04:34+05:30",
              "approve_by": "2022-02-09T18:04:34+05:30"
            },
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "CAPTURE",
                  "VOID"
                ],
                "description": "One of CAPTURE or VOID"
              },
              "status": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "PENDING"
                ],
                "description": "One of SUCCESS or PENDING"
              },
              "captured_amount": {
                "type": "number",
                "description": "The captured amount for this authorization request"
              },
              "start_time": {
                "type": "string",
                "description": "Start time of this authorization hold (only for UPI)"
              },
              "end_time": {
                "type": "string",
                "description": "End time of this authorization hold (only for UPI)"
              },
              "approve_by": {
                "type": "string",
                "description": "Approve by time as passed in the authorization request (only for UPI)"
              }
            }
          },
          "payment_method": {
            "title": "PaymentMethodInPaymentsEntity",
            "properties": {
              "payment_method": {
                "oneOf": [
                  {
                    "title": "PaymentMethodCardInPaymentsEntity",
                    "example": {
                      "channel": "link",
                      "card_number": "41111xxxxxx111",
                      "card_network": "visa",
                      "card_type": "credit_card",
                      "card_country": "IN",
                      "card_bank_name": "HDFC Bank"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "card_number": {
                        "type": "string"
                      },
                      "card_network": {
                        "type": "string"
                      },
                      "card_type": {
                        "type": "string"
                      },
                      "card_country": {
                        "type": "string"
                      },
                      "card_bank_name": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "PaymentMethodNetBankingInPaymentsEntity",
                    "example": {
                      "channel": "link",
                      "netbanking_bank_code": 3044,
                      "netbanking_bank_name": "State Bank of India"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "netbanking_bank_code": {
                        "type": "string"
                      },
                      "netbanking_bank_name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "channel",
                      "netbanking_bank_name",
                      "netbanking_bank_code"
                    ]
                  },
                  {
                    "title": "PaymentMethodUPIInPaymentsEntity",
                    "example": {
                      "channel": "collect",
                      "upi_id": "980123781@upi"
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "upi_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "channel"
                    ]
                  },
                  {
                    "title": "PaymentMethodAppInPaymentsEntity",
                    "example": {
                      "channel": "link",
                      "provider": "paytm",
                      "phone": 1234512345
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "PaymentMethodCardlessEMIInPaymentsEntity",
                    "example": {
                      "channel": "link",
                      "provider": "flexmoney",
                      "phone": 9908761211
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "PaymentMethodPaylaterInPaymentsEntity",
                    "example": {
                      "channel": "link",
                      "provider": "lazypay",
                      "phone": 9908761211
                    },
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "AuthorizationInPaymentsEntity": {
        "title": "AuthorizationInPayments",
        "description": "The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.",
        "example": {
          "action": "CAPTURE",
          "status": "PENDING",
          "captured_amount": 100,
          "start_time": "2022-02-09T18:04:34+05:30",
          "end_time": "2022-02-19T18:04:34+05:30",
          "approve_by": "2022-02-09T18:04:34+05:30"
        },
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CAPTURE",
              "VOID"
            ],
            "description": "One of CAPTURE or VOID"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "PENDING"
            ],
            "description": "One of SUCCESS or PENDING"
          },
          "captured_amount": {
            "type": "number",
            "description": "The captured amount for this authorization request"
          },
          "start_time": {
            "type": "string",
            "description": "Start time of this authorization hold (only for UPI)"
          },
          "end_time": {
            "type": "string",
            "description": "End time of this authorization hold (only for UPI)"
          },
          "approve_by": {
            "type": "string",
            "description": "Approve by time as passed in the authorization request (only for UPI)"
          }
        }
      },
      "OTPResponseEntity": {
        "title": "OTP Response Entity",
        "description": "This is the response shared when merchant inovkes the OTP submit or resend API",
        "example": {
          "cf_payment_id": 975654863,
          "authenticate_status": "FAILED",
          "operation": "SUBMIT_OTP",
          "payment_message": "otp is invalid"
        },
        "properties": {
          "cf_payment_id": {
            "type": "number",
            "description": "The payment id for which this request was sent"
          },
          "operation": {
            "type": "string",
            "enum": [
              "SUBMIT_OTP",
              "RESEND_OTP"
            ],
            "description": "The operation that was invoked for this request."
          },
          "authenticate_status": {
            "type": "string",
            "enum": [
              "FAILED",
              "SUCCESS"
            ],
            "description": "Status of the is operation. Will be either failed or successful. If the operation is successful, you should still call the authorization status to verify the final payment status."
          },
          "payment_message": {
            "type": "string",
            "description": "Human readable message which describes the status in more detail"
          }
        }
      },
      "PaymentMethodInPaymentsEntity": {
        "title": "PaymentMethodInPaymentsEntity",
        "properties": {
          "payment_method": {
            "oneOf": [
              {
                "title": "PaymentMethodCardInPaymentsEntity",
                "example": {
                  "channel": "link",
                  "card_number": "41111xxxxxx111",
                  "card_network": "visa",
                  "card_type": "credit_card",
                  "card_country": "IN",
                  "card_bank_name": "HDFC Bank"
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "card_number": {
                    "type": "string"
                  },
                  "card_network": {
                    "type": "string"
                  },
                  "card_type": {
                    "type": "string"
                  },
                  "card_country": {
                    "type": "string"
                  },
                  "card_bank_name": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "PaymentMethodNetBankingInPaymentsEntity",
                "example": {
                  "channel": "link",
                  "netbanking_bank_code": 3044,
                  "netbanking_bank_name": "State Bank of India"
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "netbanking_bank_code": {
                    "type": "string"
                  },
                  "netbanking_bank_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "channel",
                  "netbanking_bank_name",
                  "netbanking_bank_code"
                ]
              },
              {
                "title": "PaymentMethodUPIInPaymentsEntity",
                "example": {
                  "channel": "collect",
                  "upi_id": "980123781@upi"
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "upi_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "channel"
                ]
              },
              {
                "title": "PaymentMethodAppInPaymentsEntity",
                "example": {
                  "channel": "link",
                  "provider": "paytm",
                  "phone": 1234512345
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "PaymentMethodCardlessEMIInPaymentsEntity",
                "example": {
                  "channel": "link",
                  "provider": "flexmoney",
                  "phone": 9908761211
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "PaymentMethodPaylaterInPaymentsEntity",
                "example": {
                  "channel": "link",
                  "provider": "lazypay",
                  "phone": 9908761211
                },
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "PaymentMethodCardInPaymentsEntity": {
        "title": "PaymentMethodCardInPaymentsEntity",
        "example": {
          "channel": "link",
          "card_number": "41111xxxxxx111",
          "card_network": "visa",
          "card_type": "credit_card",
          "card_country": "IN",
          "card_bank_name": "HDFC Bank"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "card_number": {
            "type": "string"
          },
          "card_network": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          },
          "card_country": {
            "type": "string"
          },
          "card_bank_name": {
            "type": "string"
          }
        }
      },
      "PaymentMethodNetBankingInPaymentsEntity": {
        "title": "PaymentMethodNetBankingInPaymentsEntity",
        "example": {
          "channel": "link",
          "netbanking_bank_code": 3044,
          "netbanking_bank_name": "State Bank of India"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "netbanking_bank_code": {
            "type": "string"
          },
          "netbanking_bank_name": {
            "type": "string"
          }
        },
        "required": [
          "channel",
          "netbanking_bank_name",
          "netbanking_bank_code"
        ]
      },
      "PaymentMethodUPIInPaymentsEntity": {
        "title": "PaymentMethodUPIInPaymentsEntity",
        "example": {
          "channel": "collect",
          "upi_id": "980123781@upi"
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "upi_id": {
            "type": "string"
          }
        },
        "required": [
          "channel"
        ]
      },
      "PaymentMethodCardlessEMIInPaymentsEntity": {
        "title": "PaymentMethodCardlessEMIInPaymentsEntity",
        "example": {
          "channel": "link",
          "provider": "flexmoney",
          "phone": 9908761211
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "PaymentMethodPaylaterInPaymentsEntity": {
        "title": "PaymentMethodPaylaterInPaymentsEntity",
        "example": {
          "channel": "link",
          "provider": "lazypay",
          "phone": 9908761211
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "PaymentMethodAppInPaymentsEntity": {
        "title": "PaymentMethodAppInPaymentsEntity",
        "example": {
          "channel": "link",
          "provider": "paytm",
          "phone": 1234512345
        },
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "example": {
          "message": "bad URL, please check API documentation",
          "code": "request_failed",
          "type": "invalid_request_error"
        },
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "invalid_request_error",
              "authentication_error",
              "rate_limit_error",
              "validation_error",
              "api_error"
            ],
            "description": "One of [\"invalid_request_error\", \"authentication_error\", \"rate_limit_error\", \"validation_error\", \"api_error\"]"
          }
        }
      },
      "CreateLinkRequest": {
        "title": "CreateLinkRequest",
        "example": {
          "link_amount": 100,
          "link_currency": "INR",
          "link_minimum_partial_amount": 20,
          "link_id": "my_link_id",
          "link_partial_payments": true,
          "customer_details": {
            "customer_name": "John Doe",
            "customer_phone": "9999999999",
            "customer_email": "john@cashfree.com"
          },
          "link_expiry_time": "2021-10-14T15:04:05+05:30",
          "link_purpose": "Payment for PlayStation 11",
          "link_notify": {
            "send_sms": false,
            "send_email": true
          },
          "link_auto_reminders": true,
          "link_notes": {
            "key_1": "value_1",
            "key_2": "value_2"
          },
          "link_meta": {
            "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
            "upi_intent": false,
            "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
          }
        },
        "type": "object",
        "properties": {
          "link_id": {
            "type": "string",
            "description": "Unique Identifier (provided by merchant) for the Link. Alphanumeric and only - and _ allowed (50 character limit). Use this for other link-related APIs.",
            "maxLength": 50
          },
          "link_amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be collected using this link. Provide upto two decimals for paise."
          },
          "link_currency": {
            "type": "string",
            "description": "Currency for the payment link. Default is INR. Contact care@cashfree.com to enable new currencies.",
            "minLength": 3,
            "maxLength": 3
          },
          "link_purpose": {
            "type": "string",
            "description": "A brief description for which payment must be collected. This is shown to the customer.",
            "maxLength": 500
          },
          "customer_details": {
            "title": "customer_details",
            "type": "object",
            "example": {
              "customer_name": "John Doe",
              "customer_phone": "9999999999",
              "customer_email": "john@cashfree.com"
            },
            "properties": {
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number"
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address"
              },
              "customer_name": {
                "type": "string",
                "description": "Customer name"
              }
            },
            "required": [
              "customer_phone"
            ]
          },
          "link_partial_payments": {
            "type": "boolean",
            "description": "If \"true\", customer can make partial payments for the link."
          },
          "link_minimum_partial_amount": {
            "type": "number",
            "format": "double",
            "description": "Minimum amount in first installment that needs to be paid by the customer if partial payments are enabled. This should be less than the link_amount."
          },
          "link_expiry_time": {
            "type": "string",
            "description": "Time after which the link expires. Customers will not be able to make the payment beyond the time specified here. You can provide them in a valid ISO 8601 time format. Default is 30 days."
          },
          "link_notify": {
            "title": "link_notify",
            "type": "object",
            "example": {
              "send_sms": false,
              "send_email": true
            },
            "properties": {
              "send_sms": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send sms on customer_phone"
              },
              "send_email": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send email on customer_email"
              }
            }
          },
          "link_auto_reminders": {
            "type": "boolean",
            "description": "If \"true\", reminders will be sent to customers for collecting payments."
          },
          "link_notes": {
            "title": "link_notes",
            "type": "object",
            "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
            "example": {
              "key_1": "value_1",
              "key_2": "value_2"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "link_meta": {
            "title": "link_meta",
            "type": "object",
            "example": {
              "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
              "upi_intent": false,
              "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
            },
            "properties": {
              "notify_url": {
                "type": "string",
                "description": "Notification URL for server-server communication. It should be an https URL."
              },
              "upi_intent": {
                "type": "boolean",
                "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
              },
              "return_url": {
                "type": "string",
                "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
              },
              "payment_methods": {
                "type": "string",
                "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
              }
            }
          }
        },
        "required": [
          "link_amount",
          "link_currency",
          "link_id",
          "customer_details",
          "link_purpose"
        ]
      },
      "LinkResponse": {
        "title": "LinkCreationResponse",
        "type": "object",
        "example": {
          "cf_link_id": 1996567,
          "link_id": "my_link_id",
          "link_status": "ACTIVE",
          "link_currency": "INR",
          "link_amount": 100,
          "link_amount_paid": 0,
          "link_partial_payments": true,
          "link_minimum_partial_amount": 20,
          "link_purpose": "Payment for PlayStation 11",
          "link_created_at": "2021-09-30T17:05:01+05:30",
          "customer_details": {
            "customer_name": "John Doe",
            "customer_phone": "9999999999",
            "customer_email": "john@cashfree.com"
          },
          "link_meta": {
            "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
            "upi_intent": false,
            "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
          },
          "link_url": "https://payments-test.cashfree.com/links/o1tf1nvcvjhg",
          "link_expiry_time": "2021-10-14T15:04:05+05:30",
          "link_notes": {
            "key_1": "value_1",
            "key_2": "value_2"
          },
          "link_auto_reminders": true,
          "link_notify": {
            "send_sms": false,
            "send_email": true
          }
        },
        "properties": {
          "cf_link_id": {
            "type": "integer"
          },
          "link_id": {
            "type": "string"
          },
          "link_status": {
            "type": "string"
          },
          "link_currency": {
            "type": "string"
          },
          "link_amount": {
            "type": "number"
          },
          "link_amount_paid": {
            "type": "number"
          },
          "link_partial_payments": {
            "type": "boolean"
          },
          "link_minimum_partial_amount": {
            "type": "number"
          },
          "link_purpose": {
            "type": "string"
          },
          "link_created_at": {
            "type": "string"
          },
          "customer_details": {
            "title": "customer_details",
            "type": "object",
            "example": {
              "customer_name": "John Doe",
              "customer_phone": "9999999999",
              "customer_email": "john@cashfree.com"
            },
            "properties": {
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number"
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address"
              },
              "customer_name": {
                "type": "string",
                "description": "Customer name"
              }
            },
            "required": [
              "customer_phone"
            ]
          },
          "link_meta": {
            "title": "link_meta",
            "type": "object",
            "example": {
              "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
              "upi_intent": false,
              "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
            },
            "properties": {
              "notify_url": {
                "type": "string",
                "description": "Notification URL for server-server communication. It should be an https URL."
              },
              "upi_intent": {
                "type": "boolean",
                "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
              },
              "return_url": {
                "type": "string",
                "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
              },
              "payment_methods": {
                "type": "string",
                "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
              }
            }
          },
          "link_url": {
            "type": "string"
          },
          "link_expiry_time": {
            "type": "string"
          },
          "link_notes": {
            "title": "link_notes",
            "type": "object",
            "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
            "example": {
              "key_1": "value_1",
              "key_2": "value_2"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "link_auto_reminders": {
            "type": "boolean"
          },
          "link_notify": {
            "title": "link_notify",
            "type": "object",
            "example": {
              "send_sms": false,
              "send_email": true
            },
            "properties": {
              "send_sms": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send sms on customer_phone"
              },
              "send_email": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send email on customer_email"
              }
            }
          }
        }
      },
      "LinkCancelledResponse": {
        "title": "LinkCancelledResponse",
        "type": "object",
        "example": {
          "cf_link_id": 1996567,
          "link_id": "my_link_id",
          "link_status": "CANCELLED",
          "link_currency": "INR",
          "link_amount": 100,
          "link_amount_paid": 0,
          "link_partial_payments": false,
          "link_minimum_partial_amount": 0,
          "link_purpose": "Payment for PlayStation 11",
          "link_created_at": "2021-09-30T17:05:01+05:30",
          "customer_details": {
            "customer_name": "John Doe",
            "customer_phone": "9999999999",
            "customer_email": "john@cashfree.com"
          },
          "link_meta": {
            "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
            "upi_intent": false,
            "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
          },
          "link_url": "https://payments-test.cashfree.com/links/o1tf1nvcvjhg",
          "link_expiry_time": "2021-10-14T15:04:05+05:30",
          "link_notes": {
            "key_1": "value_1",
            "key_2": "value_2"
          },
          "link_auto_reminders": true,
          "link_notify": {
            "send_sms": false,
            "send_email": true
          }
        },
        "properties": {
          "cf_link_id": {
            "type": "integer"
          },
          "link_id": {
            "type": "string"
          },
          "link_status": {
            "type": "string"
          },
          "link_currency": {
            "type": "string"
          },
          "link_amount": {
            "type": "number"
          },
          "link_amount_paid": {
            "type": "number"
          },
          "link_partial_payments": {
            "type": "boolean"
          },
          "link_minimum_partial_amount": {
            "type": "number"
          },
          "link_purpose": {
            "type": "string"
          },
          "link_created_at": {
            "type": "string"
          },
          "customer_details": {
            "title": "customer_details",
            "type": "object",
            "example": {
              "customer_name": "John Doe",
              "customer_phone": "9999999999",
              "customer_email": "john@cashfree.com"
            },
            "properties": {
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number"
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address"
              },
              "customer_name": {
                "type": "string",
                "description": "Customer name"
              }
            },
            "required": [
              "customer_phone"
            ]
          },
          "link_meta": {
            "title": "link_meta",
            "type": "object",
            "example": {
              "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
              "upi_intent": false,
              "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
            },
            "properties": {
              "notify_url": {
                "type": "string",
                "description": "Notification URL for server-server communication. It should be an https URL."
              },
              "upi_intent": {
                "type": "boolean",
                "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
              },
              "return_url": {
                "type": "string",
                "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
              },
              "payment_methods": {
                "type": "string",
                "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
              }
            }
          },
          "link_url": {
            "type": "string"
          },
          "link_expiry_time": {
            "type": "string"
          },
          "link_notes": {
            "title": "link_notes",
            "type": "object",
            "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
            "example": {
              "key_1": "value_1",
              "key_2": "value_2"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "link_auto_reminders": {
            "type": "boolean"
          },
          "link_notify": {
            "title": "link_notify",
            "type": "object",
            "example": {
              "send_sms": false,
              "send_email": true
            },
            "properties": {
              "send_sms": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send sms on customer_phone"
              },
              "send_email": {
                "type": "boolean",
                "description": "If \"true\", Cashfree will send email on customer_email"
              }
            }
          }
        }
      },
      "LinkCancelledError": {
        "title": "LinkCancelledError",
        "example": {
          "message": "Only link in ACTIVE state can be cancelled",
          "code": "link_not_active",
          "type": "invalid_request_error"
        },
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "LinkNotifyEntity": {
        "title": "link_notify",
        "type": "object",
        "example": {
          "send_sms": false,
          "send_email": true
        },
        "properties": {
          "send_sms": {
            "type": "boolean",
            "description": "If \"true\", Cashfree will send sms on customer_phone"
          },
          "send_email": {
            "type": "boolean",
            "description": "If \"true\", Cashfree will send email on customer_email"
          }
        }
      },
      "LinkMetaEntity": {
        "title": "link_meta",
        "type": "object",
        "example": {
          "notify_url": "https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net",
          "upi_intent": false,
          "return_url": "https://b8af79f41056.eu.ngrok.io?link_id={link_id}"
        },
        "properties": {
          "notify_url": {
            "type": "string",
            "description": "Notification URL for server-server communication. It should be an https URL."
          },
          "upi_intent": {
            "type": "boolean",
            "description": "If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere"
          },
          "return_url": {
            "type": "string",
            "description": "The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250."
          },
          "payment_methods": {
            "type": "string",
            "description": "Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods"
          }
        }
      },
      "LinkNotesEntity": {
        "title": "link_notes",
        "type": "object",
        "description": "Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs",
        "example": {
          "key_1": "value_1",
          "key_2": "value_2"
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "LinkCustomerDetailsEntity": {
        "title": "customer_details",
        "type": "object",
        "example": {
          "customer_name": "John Doe",
          "customer_phone": "9999999999",
          "customer_email": "john@cashfree.com"
        },
        "properties": {
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email address"
          },
          "customer_name": {
            "type": "string",
            "description": "Customer name"
          }
        },
        "required": [
          "customer_phone"
        ]
      },
      "LinkOrdersResponse": {
        "title": "LinkOrdersResponse",
        "type": "object",
        "example": {
          "cf_order_id": 2305826,
          "customer_details": {
            "customer_name": "John Doe",
            "customer_phone": "9999999999",
            "customer_email": "john@cashfree.com"
          },
          "entity": "order",
          "link_id": "get_order_trial_1",
          "order_amount": 10.12,
          "order_currency": "INR",
          "order_expiry_time": "2022-04-01T16:29:09+05:30",
          "order_id": "order_271vovQ3PTZAx3fDI0xtZbC4jkPET",
          "order_note": "payment_link_2011690",
          "order_status": "PAID",
          "order_token": "79byj5123g6912mki3",
          "payments": {
            "title": "PaymentURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
              }
            }
          },
          "refunds": {
            "title": "RefundURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
              }
            }
          },
          "settlements": {
            "title": "SettlementURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
              }
            }
          }
        },
        "properties": {
          "cf_order_id": {
            "type": "integer"
          },
          "order_id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "order_currency": {
            "type": "string"
          },
          "order_amount": {
            "type": "number"
          },
          "order_status": {
            "type": "string"
          },
          "order_token": {
            "type": "string"
          },
          "order_expiry_time": {
            "type": "string"
          },
          "order_note": {
            "type": "string"
          },
          "customer_details": {
            "title": "customer_details",
            "type": "object",
            "example": {
              "customer_name": "John Doe",
              "customer_phone": "9999999999",
              "customer_email": "john@cashfree.com"
            },
            "properties": {
              "customer_phone": {
                "type": "string",
                "description": "Customer phone number"
              },
              "customer_email": {
                "type": "string",
                "description": "Customer email address"
              },
              "customer_name": {
                "type": "string",
                "description": "Customer name"
              }
            },
            "required": [
              "customer_phone"
            ]
          },
          "payments": {
            "title": "PaymentURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/payments"
              }
            }
          },
          "settlements": {
            "title": "SettlementURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/settlements"
              }
            }
          },
          "refunds": {
            "title": "RefundURLObject",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "https://sandbox.cashfree.com/pg/orders/order_271vovQ3PTZAx3fDI0xtZbC4jkPET/refunds"
              }
            }
          }
        }
      }
    },
    "examples": {
      "plain_card": {
        "summary": "Pay using plain card",
        "value": {
          "order_token": "hyj120nbvt12831",
          "payment_method": {
            "card": {
              "channel": "link",
              "card_number": "4111111111111111",
              "card_holder_name": "Tushar Gupta",
              "card_expiry_mm": "06",
              "card_expiry_yy": "22",
              "card_cvv": "900"
            }
          }
        }
      },
      "save_card_during_payment": {
        "summary": "Pay using plain card and save it",
        "value": {
          "order_token": "hyj120nbvt12831",
          "payment_method": {
            "card": {
              "channel": "link",
              "card_number": "4111111111111111",
              "card_holder_name": "Tushar Gupta",
              "card_expiry_mm": "06",
              "card_expiry_yy": "22",
              "card_cvv": "900"
            }
          },
          "save_instrument": true
        }
      },
      "saved_card": {
        "summary": "Pay using instrument id of saved card",
        "value": {
          "order_token": "hyj120nbvt12831",
          "payment_method": {
            "card": {
              "channel": "link",
              "instrument_id": "54deabb4-ba45-4a60-9e6a-9c016fe7ab10",
              "card_cvv": "900"
            }
          }
        }
      },
      "token_card": {
        "summary": "Pay using card network token and cryptogram",
        "value": {
          "order_token": "hyj120nbvt12831",
          "payment_method": {
            "card": {
              "channel": "link",
              "card_number": "4111111111111111",
              "card_expiry_mm": "03",
              "card_expiry_yy": "26",
              "cryptogram": "AQBBBBBBZatIlaIAmWKSghwBBBB=",
              "card_cvv": "900",
              "token_requestor_id": "22457512314",
              "card_display": "3243"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Orders"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Authentication",
      "description": "The Authentication API allows merchants to show a native screen and capture OTP on their own page and submit to Cashfree. This feature is only available on request."
    },
    {
      "name": "Refunds"
    },
    {
      "name": "Settlements"
    },
    {
      "name": "Payment Links"
    },
    {
      "name": "Token Vault",
      "description": "Cashfree's token Vault helps you save cards and tokenize them in a PCI complaint manner. We support creation of network tokens which can be used across acquiring banks"
    }
  ]
}